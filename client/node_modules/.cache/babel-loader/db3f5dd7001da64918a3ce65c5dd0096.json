{"ast":null,"code":"import _toConsumableArray from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/Users/Users.js\";\nimport React from 'react';\nimport './users.css';\nimport Input from '../UI/Input';\nimport UserList from './UserList';\n/**\n * DUMMY DATA\n */\n\nvar DATA = [{\n  fullName: 'John Doe',\n  userId: 'john.doe100',\n  email: 'john@mail.com',\n  accessType: 'updates'\n}, {\n  fullName: 'Jeanne Doe',\n  userId: 'jeanne.doe200',\n  email: 'jeanne@mail.com',\n  accessType: 'updates'\n}, {\n  fullName: 'Bobby Doe',\n  userId: 'bobby.doe300',\n  email: 'bobby@mail.com',\n  accessType: 'updates'\n}];\n\nvar Users =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(userInput, _React$Component);\n\n  function userInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, userInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(userInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fullName: '',\n      userId: '',\n      email: '',\n      password: '',\n      passwordCheck: '',\n      accessType: 'updates',\n      formsError: {\n        fullName: false,\n        userId: false,\n        email: false,\n        password: false,\n        passwordCheck: false,\n        accessType: false\n      },\n      showError: false\n    };\n\n    _this.handleChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          formsError = _this$state.formsError,\n          password = _this$state.password,\n          passwordCheck = _this$state.passwordCheck; // Forms Data to send\n\n      var data = _objectSpread({}, _this.state);\n\n      delete data.formsError;\n      delete data.passwordCheck;\n      delete data.showError; // Check if the form has error\n\n      var hasError = Object.values(formsError).find(function (error) {\n        return error !== false;\n      });\n      var dataIsEmpty = Object.values(data).includes('');\n      var passIsEqual = password === passwordCheck; // If Forms have error show them\n\n      if (hasError || !passIsEqual || dataIsEmpty) _this.setState({\n        showError: true\n      }); // If Forms is valid send data Forms to the server\n\n      if (!hasError && passIsEqual && !dataIsEmpty) {\n        var payload = {\n          method: 'POST',\n          body: data\n        };\n        fetch('/admin/newuser', payload).then(function (res) {\n          return console.log(res);\n        }).catch(function (err) {\n          return console.log(err);\n        }); // FOR TESTING ONLY with dummy data\n\n        _this.setState({\n          users: _toConsumableArray(_this.state.users).concat([data])\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(userInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Get data from the db\n      this.setState({\n        users: DATA\n      });\n    } // case 'accessType':\n    //   formsError[name] =\n    //     value === 'updates'\n    //       ? false\n    //       : value === 'premium'\n    //       ? false\n    //       : ERR_SELECT;\n\n  }, {\n    key: \"handleShowUser\",\n    value: function handleShowUser() {\n      this.setState({\n        showUser: !this.state.showUser\n      });\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(userId) {\n      var users = this.state.users;\n      this.setState({\n        users: users.filter(function (user) {\n          return user.userId != userId;\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"USERS\"), this.state.showError && ERR_FORMS, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        style: {\n          display: 'grid'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"fullName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Full Name:\"), React.createElement(Input, {\n        label: \"Full Name\",\n        placeholder: \"John Doe\",\n        name: \"fullName\",\n        type: \"text\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        value: this.state.fullName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"User Id\",\n        placeholder: \"john42\",\n        name: \"userId\",\n        type: \"text\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"Email\",\n        placeholder: \"john.doe@mail.com\",\n        name: \"email\",\n        type: \"email\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Password:\"), this.state.showError && this.state.formsError.password, React.createElement(\"input\", {\n        id: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"passwordCheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Confirm Password:\"), this.state.showError && this.state.formsError.passwordCheck, React.createElement(\"input\", {\n        id: \"passwordCheck\",\n        placeholder: \"Confirm Password\",\n        name: \"passwordCheck\",\n        type: \"password\",\n        value: this.state.passwordCheck,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"accessType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Access Type:\"), this.state.showError && this.state.formsError.accessType, React.createElement(\"select\", {\n        id: \"accessType\",\n        name: \"accessType\",\n        value: this.state.accessType,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"updates\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Updates Only\"), React.createElement(\"option\", {\n        value: \"premium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Premiun Access\")), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Create New User\")), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Show a list of users\"), this.state.users && this.state.users.map(function (user) {\n        return React.createElement(UserList, {\n          key: user.userId,\n          fullName: user.fullName,\n          userId: user.userId,\n          email: user.email,\n          accessType: user.accessType,\n          delete: function _delete() {\n            return _this2.handleDelete(user.userId);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return userInput;\n}(React.Component);\n\nexport default Users;","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/Users/Users.js"],"names":["React","Input","UserList","DATA","fullName","userId","email","accessType","Users","state","password","passwordCheck","formsError","showError","handleChange","e","setState","target","name","value","handleSubmit","event","preventDefault","data","hasError","Object","values","find","error","dataIsEmpty","includes","passIsEqual","payload","method","body","fetch","then","res","console","log","catch","err","users","showUser","filter","user","ERR_FORMS","display","map","handleDelete","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './users.css';\nimport Input from '../UI/Input';\nimport UserList from './UserList';\n\n/**\n * DUMMY DATA\n */\nconst DATA = [\n  {\n    fullName: 'John Doe',\n    userId: 'john.doe100',\n    email: 'john@mail.com',\n    accessType: 'updates'\n  },\n  {\n    fullName: 'Jeanne Doe',\n    userId: 'jeanne.doe200',\n    email: 'jeanne@mail.com',\n    accessType: 'updates'\n  },\n  {\n    fullName: 'Bobby Doe',\n    userId: 'bobby.doe300',\n    email: 'bobby@mail.com',\n    accessType: 'updates'\n  }\n];\n\nconst Users = class userInput extends React.Component {\n  state = {\n    fullName: '',\n    userId: '',\n    email: '',\n    password: '',\n    passwordCheck: '',\n    accessType: 'updates',\n    formsError: {\n      fullName: false,\n      userId: false,\n      email: false,\n      password: false,\n      passwordCheck: false,\n      accessType: false\n    },\n    showError: false\n  };\n\n  componentDidMount() {\n    // Get data from the db\n    this.setState({ users: DATA });\n  }\n\n  // case 'accessType':\n  //   formsError[name] =\n  //     value === 'updates'\n  //       ? false\n  //       : value === 'premium'\n  //       ? false\n  //       : ERR_SELECT;\n\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { formsError, password, passwordCheck } = this.state;\n\n    // Forms Data to send\n    const data = { ...this.state };\n    delete data.formsError;\n    delete data.passwordCheck;\n    delete data.showError;\n\n    // Check if the form has error\n    const hasError = Object.values(formsError).find(error => error !== false);\n    const dataIsEmpty = Object.values(data).includes('');\n\n    const passIsEqual = password === passwordCheck;\n\n    // If Forms have error show them\n    if (hasError || !passIsEqual || dataIsEmpty)\n      this.setState({ showError: true });\n\n    // If Forms is valid send data Forms to the server\n    if (!hasError && passIsEqual && !dataIsEmpty) {\n      const payload = {\n        method: 'POST',\n        body: data\n      };\n\n      fetch('/admin/newuser', payload)\n        .then(res => console.log(res))\n        .catch(err => console.log(err));\n\n      // FOR TESTING ONLY with dummy data\n      this.setState({ users: [...this.state.users, data] });\n    }\n  };\n\n  handleShowUser() {\n    this.setState({ showUser: !this.state.showUser });\n  }\n\n  handleDelete(userId) {\n    const { users } = this.state;\n    this.setState({ users: users.filter(user => user.userId != userId) });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>USERS</h1>\n        {this.state.showError && ERR_FORMS}\n        <form onSubmit={this.handleSubmit} style={{ display: 'grid' }}>\n          <label htmlFor='fullName'>Full Name:</label>\n          <Input\n            label='Full Name'\n            placeholder='John Doe'\n            name='fullName'\n            type='text'\n            showError={this.state.showError}\n            hasError={this.hasError}\n            value={this.state.fullName}\n            onChange={this.handleChange}\n          />\n\n          <Input\n            label='User Id'\n            placeholder='john42'\n            name='userId'\n            type='text'\n            showError={this.state.showError}\n            hasError={this.hasError}\n            onChange={this.handleChange}\n            value={this.state.userId}\n          />\n\n          <Input\n            label='Email'\n            placeholder='john.doe@mail.com'\n            name='email'\n            type='email'\n            showError={this.state.showError}\n            hasError={this.hasError}\n            onChange={this.handleChange}\n            value={this.state.email}\n          />\n\n          <label htmlFor='password'>Password:</label>\n          {this.state.showError && this.state.formsError.password}\n          <input\n            id='password'\n            placeholder='Password'\n            name='password'\n            type='password'\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='passwordCheck'>Confirm Password:</label>\n          {this.state.showError && this.state.formsError.passwordCheck}\n          <input\n            id='passwordCheck'\n            placeholder='Confirm Password'\n            name='passwordCheck'\n            type='password'\n            value={this.state.passwordCheck}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='accessType'>Access Type:</label>\n          {this.state.showError && this.state.formsError.accessType}\n          <select\n            id='accessType'\n            name='accessType'\n            value={this.state.accessType}\n            onChange={this.handleChange}>\n            <option value='updates'>Updates Only</option>\n            <option value='premium'>Premiun Access</option>\n          </select>\n\n          <button type='submit'>Create New User</button>\n        </form>\n\n        <h2>Show a list of users</h2>\n        {this.state.users &&\n          this.state.users.map(user => (\n            <UserList\n              key={user.userId}\n              fullName={user.fullName}\n              userId={user.userId}\n              email={user.email}\n              accessType={user.accessType}\n              delete={() => this.handleDelete(user.userId)}\n            />\n          ))}\n      </div>\n    );\n  }\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}