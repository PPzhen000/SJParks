{"ast":null,"code":"import _toConsumableArray from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/Users/Users.js\";\nimport React from 'react';\nimport './users.css';\nimport Input from '../UI/Input';\nimport UserList from './UserList';\n/**\n * DUMMY DATA\n */\n\nvar DATA = [{\n  fullName: 'John Doe',\n  userId: 'john.doe100',\n  email: 'john@mail.com',\n  accessType: 'updates'\n}, {\n  fullName: 'Jeanne Doe',\n  userId: 'jeanne.doe200',\n  email: 'jeanne@mail.com',\n  accessType: 'updates'\n}, {\n  fullName: 'Bobby Doe',\n  userId: 'bobby.doe300',\n  email: 'bobby@mail.com',\n  accessType: 'updates'\n}];\n\nvar Users =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(userInput, _React$Component);\n\n  function userInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, userInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(userInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fullName: '',\n      userId: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      passwordCheck: ''\n    };\n\n    _this.handleChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.hasError = function (err) {\n      return err;\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          formsError = _this$state.formsError,\n          password = _this$state.password,\n          passwordCheck = _this$state.passwordCheck; // Forms Data to send\n\n      var data = _objectSpread({}, _this.state);\n\n      delete data.formsError;\n      delete data.passwordCheck;\n      delete data.showError; // Check if the form has error\n\n      var hasError = Object.values(formsError).find(function (error) {\n        return error !== false;\n      });\n      var dataIsEmpty = Object.values(data).includes('');\n      var passIsEqual = password === passwordCheck; // If Forms have error show them\n\n      if (hasError || !passIsEqual || dataIsEmpty) _this.setState({\n        showError: true\n      }); // If Forms is valid send data Forms to the server\n\n      if (!hasError && passIsEqual && !dataIsEmpty) {\n        var payload = {\n          method: 'POST',\n          body: data\n        };\n        fetch('/admin/newuser', payload).then(function (res) {\n          return console.log(res);\n        }).catch(function (err) {\n          return console.log(err);\n        }); // FOR TESTING ONLY with dummy data\n\n        _this.setState({\n          users: _toConsumableArray(_this.state.users).concat([data])\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(userInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Get data from the db\n      this.setState({\n        users: DATA\n      });\n    } // case 'accessType':\n    //   formsError[name] =\n    //     value === 'updates'\n    //       ? false\n    //       : value === 'premium'\n    //       ? false\n    //       : ERR_SELECT;\n\n  }, {\n    key: \"handleShowUser\",\n    value: function handleShowUser() {\n      this.setState({\n        showUser: !this.state.showUser\n      });\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(userId) {\n      var users = this.state.users;\n      this.setState({\n        users: users.filter(function (user) {\n          return user.userId != userId;\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"USERS\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        style: {\n          display: 'grid'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Input, {\n        label: \"Full Name\",\n        placeholder: \"John Doe\",\n        name: \"fullName\",\n        type: \"text\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        value: this.state.fullName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"User Id\",\n        placeholder: \"john42\",\n        name: \"userId\",\n        type: \"text\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"Email\",\n        placeholder: \"john.doe@mail.com\",\n        name: \"email\",\n        type: \"email\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"Password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"Confirm Password\",\n        placeholder: \"Confirm Password\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.confirmPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"Password Check\",\n        placeholder: \"Password Check\",\n        name: \"passwordCheck\",\n        type: \"password\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.passwordCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Create New User\")), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Show a list of users\"));\n    }\n  }]);\n\n  return userInput;\n}(React.Component);\n\nexport default Users;","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/Users/Users.js"],"names":["React","Input","UserList","DATA","fullName","userId","email","accessType","Users","state","password","confirmPassword","passwordCheck","handleChange","e","setState","target","name","value","hasError","err","handleSubmit","event","preventDefault","formsError","data","showError","Object","values","find","error","dataIsEmpty","includes","passIsEqual","payload","method","body","fetch","then","res","console","log","catch","users","showUser","filter","user","display","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './users.css';\nimport Input from '../UI/Input';\nimport UserList from './UserList';\n\n/**\n * DUMMY DATA\n */\nconst DATA = [\n  {\n    fullName: 'John Doe',\n    userId: 'john.doe100',\n    email: 'john@mail.com',\n    accessType: 'updates'\n  },\n  {\n    fullName: 'Jeanne Doe',\n    userId: 'jeanne.doe200',\n    email: 'jeanne@mail.com',\n    accessType: 'updates'\n  },\n  {\n    fullName: 'Bobby Doe',\n    userId: 'bobby.doe300',\n    email: 'bobby@mail.com',\n    accessType: 'updates'\n  }\n];\n\nconst Users = class userInput extends React.Component {\n  // state = {\n  //   fullName: '',\n  //   userId: '',\n  //   email: '',\n  //   password: '',\n  //   passwordCheck: '',\n  //   accessType: 'updates',\n  //   formsError: {\n  //     fullName: false,\n  //     userId: false,\n  //     email: false,\n  //     password: false,\n  //     passwordCheck: false,\n  //     accessType: false\n  //   },\n  //   showError: false\n  // };\n\n  state = {\n    fullName: '',\n    userId: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    passwordCheck: ''\n  };\n\n  componentDidMount() {\n    // Get data from the db\n    this.setState({ users: DATA });\n  }\n\n  // case 'accessType':\n  //   formsError[name] =\n  //     value === 'updates'\n  //       ? false\n  //       : value === 'premium'\n  //       ? false\n  //       : ERR_SELECT;\n\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\n  hasError = err => err;\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { formsError, password, passwordCheck } = this.state;\n\n    // Forms Data to send\n    const data = { ...this.state };\n    delete data.formsError;\n    delete data.passwordCheck;\n    delete data.showError;\n\n    // Check if the form has error\n    const hasError = Object.values(formsError).find(error => error !== false);\n    const dataIsEmpty = Object.values(data).includes('');\n\n    const passIsEqual = password === passwordCheck;\n\n    // If Forms have error show them\n    if (hasError || !passIsEqual || dataIsEmpty)\n      this.setState({ showError: true });\n\n    // If Forms is valid send data Forms to the server\n    if (!hasError && passIsEqual && !dataIsEmpty) {\n      const payload = {\n        method: 'POST',\n        body: data\n      };\n\n      fetch('/admin/newuser', payload)\n        .then(res => console.log(res))\n        .catch(err => console.log(err));\n\n      // FOR TESTING ONLY with dummy data\n      this.setState({ users: [...this.state.users, data] });\n    }\n  };\n\n  handleShowUser() {\n    this.setState({ showUser: !this.state.showUser });\n  }\n\n  handleDelete(userId) {\n    const { users } = this.state;\n    this.setState({ users: users.filter(user => user.userId != userId) });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>USERS</h1>\n        <form onSubmit={this.handleSubmit} style={{ display: 'grid' }}>\n          <Input\n            label='Full Name'\n            placeholder='John Doe'\n            name='fullName'\n            type='text'\n            showError={this.state.showError}\n            hasError={this.hasError}\n            value={this.state.fullName}\n            onChange={this.handleChange}\n          />\n\n          <Input\n            label='User Id'\n            placeholder='john42'\n            name='userId'\n            type='text'\n            showError={this.state.showError}\n            hasError={this.hasError}\n            onChange={this.handleChange}\n            value={this.state.userId}\n          />\n\n          <Input\n            label='Email'\n            placeholder='john.doe@mail.com'\n            name='email'\n            type='email'\n            showError={this.state.showError}\n            hasError={this.hasError}\n            onChange={this.handleChange}\n            value={this.state.email}\n          />\n\n          <Input\n            label='Password'\n            placeholder='Password'\n            name='password'\n            type='password'\n            showError={this.state.showError}\n            hasError={this.hasError}\n            onChange={this.handleChange}\n            value={this.state.password}\n          />\n\n          <Input\n            label='Confirm Password'\n            placeholder='Confirm Password'\n            name='confirmPassword'\n            type='password'\n            showError={this.state.showError}\n            hasError={this.hasError}\n            onChange={this.handleChange}\n            value={this.state.confirmPassword}\n          />\n\n          <Input\n            label='Password Check'\n            placeholder='Password Check'\n            name='passwordCheck'\n            type='password'\n            showError={this.state.showError}\n            hasError={this.hasError}\n            onChange={this.handleChange}\n            value={this.state.passwordCheck}\n          />\n\n          {/* <label htmlFor='accessType'>Access Type:</label>\n          {this.state.showError && this.state.formsError.accessType}\n          <select\n            id='accessType'\n            name='accessType'\n            value={this.state.accessType}\n            onChange={this.handleChange}>\n            <option value='updates'>Updates Only</option>\n            <option value='premium'>Premiun Access</option>\n          </select> */}\n\n          <button type='submit'>Create New User</button>\n        </form>\n\n        <h2>Show a list of users</h2>\n        {/* {this.state.users &&\n          this.state.users.map(user => (\n            <UserList\n              key={user.userId}\n              fullName={user.fullName}\n              userId={user.userId}\n              email={user.email}\n              accessType={user.accessType}\n              delete={() => this.handleDelete(user.userId)}\n            />\n          ))} */}\n      </div>\n    );\n  }\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}