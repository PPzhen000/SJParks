{"ast":null,"code":"import _toConsumableArray from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/users.js\";\nimport React from \"react\";\nimport \"./users.css\";\nimport UserList from \"./userlist\";\nvar ERR_TEXT = \"minimum 3 characaters\";\nvar ERR_MAIL = \"invalid email address\";\nvar ERR_PASS = \"minimum 6 characaters\";\nvar ERR_SELECT = \"You must choose one option\";\nvar ERR_FORMS = \"Something wrong, did you fill up everything correctly?\";\n/**\n * DUMMY DATA\n */\n\nvar DATA = [{\n  fullName: \"John Doe\",\n  userId: \"john.doe100\",\n  email: \"john@mail.com\",\n  accessType: \"updates\"\n}, {\n  fullName: \"Jeanne Doe\",\n  userId: \"jeanne.doe200\",\n  email: \"jeanne@mail.com\",\n  accessType: \"updates\"\n}, {\n  fullName: \"Bobby Doe\",\n  userId: \"bobby.doe300\",\n  email: \"bobby@mail.com\",\n  accessType: \"updates\"\n}];\nvar REGEX_MAIL = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nvar Users =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(userInput, _React$Component);\n\n  function userInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, userInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(userInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fullName: \"\",\n      userId: \"\",\n      email: \"\",\n      password: \"\",\n      passwordCheck: \"\",\n      accessType: \"updates\",\n      formsError: {\n        fullName: false,\n        userId: false,\n        email: false,\n        password: false,\n        passwordCheck: false,\n        accessType: false\n      },\n      showError: false\n    };\n\n    _this.handleChange = function (event) {\n      var _this$setState;\n\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      var formsError = _this.state.formsError;\n      /**\n       * Handle Input rules\n       * Return String or false\n       */\n\n      switch (name) {\n        case \"fullName\":\n          formsError[name] = value.length < 3 ? ERR_TEXT : false;\n          break;\n\n        case \"userId\":\n          formsError[name] = value.length < 3 ? ERR_TEXT : false;\n          break;\n\n        case \"email\":\n          formsError[name] = REGEX_MAIL.test(value) ? false : ERR_MAIL;\n          break;\n\n        case \"password\":\n          formsError[name] = value.length < 6 ? ERR_PASS : false;\n          break;\n\n        case \"passwordCheck\":\n          formsError[name] = value.length < 6 ? ERR_PASS : false;\n          break;\n\n        case \"accessType\":\n          formsError[name] = value === \"updates\" ? false : value === \"premium\" ? false : ERR_SELECT;\n          break;\n      }\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, \"formsError\", formsError), _this$setState));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          formsError = _this$state.formsError,\n          password = _this$state.password,\n          passwordCheck = _this$state.passwordCheck; // Forms Data to send\n\n      var data = _objectSpread({}, _this.state);\n\n      delete data.formsError;\n      delete data.passwordCheck;\n      delete data.showError; // Check if the form has error\n\n      var hasError = Object.values(formsError).find(function (error) {\n        return error !== false;\n      });\n      var dataIsEmpty = Object.values(data).includes(\"\");\n      var passIsEqual = password === passwordCheck; // If Forms have error show them\n\n      if (hasError || !passIsEqual || dataIsEmpty) _this.setState({\n        showError: true\n      }); // If Forms is valid send data Forms to the server\n\n      if (!hasError && passIsEqual && !dataIsEmpty) {\n        var payload = {\n          method: \"POST\",\n          body: data\n        };\n        fetch(\"/admin/newuser\", payload).then(function (res) {\n          return console.log(res);\n        }).catch(function (err) {\n          return console.log(err);\n        }); // FOR TESTING ONLY with dummydata\n\n        _this.setState({\n          users: _toConsumableArray(_this.state.users).concat([data])\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(userInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Get data from the db\n      this.setState({\n        users: DATA\n      });\n    }\n  }, {\n    key: \"handleShowUser\",\n    value: function handleShowUser() {\n      this.setState({\n        showUser: !this.state.showUser\n      });\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(userId) {\n      var users = this.state.users;\n      this.setState({\n        users: users.filter(function (user) {\n          return user.userId != userId;\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"USERS\"), this.state.showError && ERR_FORMS, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        style: {\n          display: \"grid\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"fullName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Full Name:\"), this.state.showError && this.state.formsError.fullName, React.createElement(\"input\", {\n        id: \"fullName\",\n        placeholder: \"Full Name\",\n        name: \"fullName\",\n        type: \"text\",\n        value: this.state.fullName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"userId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"User ID: \"), this.state.showError && this.state.formsError.userId, React.createElement(\"input\", {\n        id: \"userId\",\n        placeholder: \"User ID\",\n        name: \"userId\",\n        type: \"text\",\n        value: this.state.userId,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Email:\"), this.state.showError && this.state.formsError.email, React.createElement(\"input\", {\n        id: \"email\",\n        placeholder: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Password:\"), this.state.showError && this.state.formsError.password, React.createElement(\"input\", {\n        id: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"passwordCheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Confirm Password:\"), this.state.showError && this.state.formsError.passwordCheck, React.createElement(\"input\", {\n        id: \"passwordCheck\",\n        placeholder: \"Confirm Password\",\n        name: \"passwordCheck\",\n        type: \"password\",\n        value: this.state.passwordCheck,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"accessType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Access Type:\"), this.state.showError && this.state.formsError.accessType, React.createElement(\"select\", {\n        id: \"accessType\",\n        name: \"accessType\",\n        value: this.state.accessType,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"updates\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Updates Only\"), React.createElement(\"option\", {\n        value: \"premium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Premiun Access\")), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Create New User\")), \"// Show a list of users\", this.state.users && this.state.users.map(function (user) {\n        return React.createElement(UserList, {\n          key: user.userId,\n          fullName: user.fullName,\n          userId: user.userId,\n          email: user.email,\n          accessType: user.accessType,\n          delete: function _delete() {\n            return _this2.handleDelete(user.userId);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return userInput;\n}(React.Component);\n\nexport default Users;","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/users.js"],"names":["React","UserList","ERR_TEXT","ERR_MAIL","ERR_PASS","ERR_SELECT","ERR_FORMS","DATA","fullName","userId","email","accessType","REGEX_MAIL","RegExp","Users","state","password","passwordCheck","formsError","showError","handleChange","event","target","name","value","length","test","setState","handleSubmit","preventDefault","data","hasError","Object","values","find","error","dataIsEmpty","includes","passIsEqual","payload","method","body","fetch","then","res","console","log","catch","err","users","showUser","filter","user","display","map","handleDelete","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./users.css\";\nimport UserList from \"./userlist\";\n\nconst ERR_TEXT = \"minimum 3 characaters\";\nconst ERR_MAIL = \"invalid email address\";\nconst ERR_PASS = \"minimum 6 characaters\";\nconst ERR_SELECT = \"You must choose one option\";\nconst ERR_FORMS = \"Something wrong, did you fill up everything correctly?\";\n\n/**\n * DUMMY DATA\n */\nconst DATA = [\n  {\n    fullName: \"John Doe\",\n    userId: \"john.doe100\",\n    email: \"john@mail.com\",\n    accessType: \"updates\"\n  },\n  {\n    fullName: \"Jeanne Doe\",\n    userId: \"jeanne.doe200\",\n    email: \"jeanne@mail.com\",\n    accessType: \"updates\"\n  },\n  {\n    fullName: \"Bobby Doe\",\n    userId: \"bobby.doe300\",\n    email: \"bobby@mail.com\",\n    accessType: \"updates\"\n  }\n];\n\nconst REGEX_MAIL = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst Users = class userInput extends React.Component {\n  state = {\n    fullName: \"\",\n    userId: \"\",\n    email: \"\",\n    password: \"\",\n    passwordCheck: \"\",\n    accessType: \"updates\",\n    formsError: {\n      fullName: false,\n      userId: false,\n      email: false,\n      password: false,\n      passwordCheck: false,\n      accessType: false\n    },\n    showError: false\n  };\n\n  componentDidMount() {\n    // Get data from the db\n    this.setState({ users: DATA });\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    const { formsError } = this.state;\n\n    /**\n     * Handle Input rules\n     * Return String or false\n     */\n    switch (name) {\n      case \"fullName\":\n        formsError[name] = value.length < 3 ? ERR_TEXT : false;\n        break;\n      case \"userId\":\n        formsError[name] = value.length < 3 ? ERR_TEXT : false;\n        break;\n      case \"email\":\n        formsError[name] = REGEX_MAIL.test(value) ? false : ERR_MAIL;\n        break;\n      case \"password\":\n        formsError[name] = value.length < 6 ? ERR_PASS : false;\n        break;\n      case \"passwordCheck\":\n        formsError[name] = value.length < 6 ? ERR_PASS : false;\n        break;\n      case \"accessType\":\n        formsError[name] =\n          value === \"updates\"\n            ? false\n            : value === \"premium\"\n            ? false\n            : ERR_SELECT;\n        break;\n    }\n\n    this.setState({ [name]: value, formsError });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { formsError, password, passwordCheck } = this.state;\n\n    // Forms Data to send\n    const data = { ...this.state };\n    delete data.formsError;\n    delete data.passwordCheck;\n    delete data.showError;\n\n    // Check if the form has error\n    const hasError = Object.values(formsError).find(error => error !== false);\n    const dataIsEmpty = Object.values(data).includes(\"\");\n\n    const passIsEqual = password === passwordCheck;\n\n    // If Forms have error show them\n    if (hasError || !passIsEqual || dataIsEmpty)\n      this.setState({ showError: true });\n\n    // If Forms is valid send data Forms to the server\n    if (!hasError && passIsEqual && !dataIsEmpty) {\n      const payload = {\n        method: \"POST\",\n        body: data\n      };\n\n      fetch(\"/admin/newuser\", payload)\n        .then(res => console.log(res))\n        .catch(err => console.log(err));\n\n      // FOR TESTING ONLY with dummydata\n      this.setState({ users: [...this.state.users, data] });\n    }\n  };\n\n  handleShowUser() {\n    this.setState({ showUser: !this.state.showUser });\n  }\n\n  handleDelete(userId) {\n    const { users } = this.state;\n    this.setState({ users: users.filter(user => user.userId != userId) });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>USERS</h1>\n        {this.state.showError && ERR_FORMS}\n        <form onSubmit={this.handleSubmit} style={{ display: \"grid\" }}>\n          <label htmlFor='fullName'>Full Name:</label>\n          {this.state.showError && this.state.formsError.fullName}\n          <input\n            id='fullName'\n            placeholder='Full Name'\n            name='fullName'\n            type='text'\n            value={this.state.fullName}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='userId'>User ID: </label>\n          {this.state.showError && this.state.formsError.userId}\n          <input\n            id='userId'\n            placeholder='User ID'\n            name='userId'\n            type='text'\n            value={this.state.userId}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='email'>Email:</label>\n          {this.state.showError && this.state.formsError.email}\n          <input\n            id='email'\n            placeholder='Email'\n            name='email'\n            type='email'\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='password'>Password:</label>\n          {this.state.showError && this.state.formsError.password}\n          <input\n            id='password'\n            placeholder='Password'\n            name='password'\n            type='password'\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='passwordCheck'>Confirm Password:</label>\n          {this.state.showError && this.state.formsError.passwordCheck}\n          <input\n            id='passwordCheck'\n            placeholder='Confirm Password'\n            name='passwordCheck'\n            type='password'\n            value={this.state.passwordCheck}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='accessType'>Access Type:</label>\n          {this.state.showError && this.state.formsError.accessType}\n          <select\n            id='accessType'\n            name='accessType'\n            value={this.state.accessType}\n            onChange={this.handleChange}>\n            <option value='updates'>Updates Only</option>\n            <option value='premium'>Premiun Access</option>\n          </select>\n\n          <button type='submit'>Create New User</button>\n        </form>\n        // Show a list of users\n        {this.state.users &&\n          this.state.users.map(user => (\n            <UserList\n              key={user.userId}\n              fullName={user.fullName}\n              userId={user.userId}\n              email={user.email}\n              accessType={user.accessType}\n              delete={() => this.handleDelete(user.userId)}\n            />\n          ))}\n      </div>\n    );\n  }\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}