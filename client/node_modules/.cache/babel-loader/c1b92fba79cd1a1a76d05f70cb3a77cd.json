{"ast":null,"code":"import _classCallCheck from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/UI/Forms/InputText.js\";\nimport React from 'react';\nvar ERR_TEXT = 'Minimum 3 characaters';\nvar ERR_MAIL = 'Invalid email address';\nvar ERR_TEL = 'Invalid phone number';\nvar ERR_PASS = 'Minimum 6 characaters';\nvar ERR_SELECT = 'You must choose one option';\nvar ERR_FORMS = 'Something wrong, did you fill up everything correctly?';\nvar REGEX_MAIL = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nvar REGEX_TEL = /[0-9]{3}-[0-9]{3}-[0-9]{4}/;\n\nvar InputText =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InputText, _React$Component);\n\n  function InputText() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InputText);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InputText)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleError = function (value, type) {\n      switch (type) {\n        case 'text':\n          return value.length < 3 ? ERR_TEXT : null;\n\n        case 'email':\n          return REGEX_MAIL.test(value) ? null : ERR_MAIL;\n\n        case 'tel':\n          return REGEX_TEL.test(value) ? null : ERR_TEL;\n\n        default:\n          return ERR_FORMS;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(InputText, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          hasError = _this$props.hasError,\n          label = _this$props.label,\n          name = _this$props.name,\n          onChange = _this$props.onChange,\n          placeholder = _this$props.placeholder,\n          showError = _this$props.showError,\n          type = _this$props.type,\n          value = _this$props.value;\n      var error = this.handleError(value, type);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, label), showError ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, error) : null, React.createElement(\"input\", {\n        id: name,\n        placeholder: placeholder,\n        name: name,\n        type: type,\n        value: value,\n        onChange: onChange,\n        haserror: hasError(error),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return InputText;\n}(React.Component);\n\nexport default InputText;","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/UI/Forms/InputText.js"],"names":["React","ERR_TEXT","ERR_MAIL","ERR_TEL","ERR_PASS","ERR_SELECT","ERR_FORMS","REGEX_MAIL","RegExp","REGEX_TEL","InputText","handleError","value","type","length","test","props","hasError","label","name","onChange","placeholder","showError","error","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAG,uBAAjB;AACA,IAAMC,QAAQ,GAAG,uBAAjB;AACA,IAAMC,OAAO,GAAG,sBAAhB;AACA,IAAMC,QAAQ,GAAG,uBAAjB;AACA,IAAMC,UAAU,GAAG,4BAAnB;AACA,IAAMC,SAAS,GAAG,wDAAlB;AAEA,IAAMC,UAAU,GAAGC,MAAM,CACvB,sEADuB,CAAzB;AAGA,IAAMC,SAAS,GAAG,4BAAlB;;IAEMC,S;;;;;;;;;;;;;;;;;;UACJC,W,GAAc,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAC7B,cAAQA,IAAR;AACE,aAAK,MAAL;AACE,iBAAOD,KAAK,CAACE,MAAN,GAAe,CAAf,GAAmBb,QAAnB,GAA8B,IAArC;;AACF,aAAK,OAAL;AACE,iBAAOM,UAAU,CAACQ,IAAX,CAAgBH,KAAhB,IAAyB,IAAzB,GAAgCV,QAAvC;;AACF,aAAK,KAAL;AACE,iBAAOO,SAAS,CAACM,IAAV,CAAeH,KAAf,IAAwB,IAAxB,GAA+BT,OAAtC;;AACF;AACE,iBAAOG,SAAP;AARJ;AAUD,K;;;;;;;6BAEQ;AAAA,wBAUH,KAAKU,KAVF;AAAA,UAELC,QAFK,eAELA,QAFK;AAAA,UAGLC,KAHK,eAGLA,KAHK;AAAA,UAILC,IAJK,eAILA,IAJK;AAAA,UAKLC,QALK,eAKLA,QALK;AAAA,UAMLC,WANK,eAMLA,WANK;AAAA,UAOLC,SAPK,eAOLA,SAPK;AAAA,UAQLT,IARK,eAQLA,IARK;AAAA,UASLD,KATK,eASLA,KATK;AAWP,UAAMW,KAAK,GAAG,KAAKZ,WAAL,CAAiBC,KAAjB,EAAwBC,IAAxB,CAAd;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAEM,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBD,KAAvB,CADF,EAEGI,SAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOC,KAAP,CAAH,GAA0B,IAFtC,EAGE;AACE,QAAA,EAAE,EAAEJ,IADN;AAEE,QAAA,WAAW,EAAEE,WAFf;AAGE,QAAA,IAAI,EAAEF,IAHR;AAIE,QAAA,IAAI,EAAEN,IAJR;AAKE,QAAA,KAAK,EAAED,KALT;AAME,QAAA,QAAQ,EAAEQ,QANZ;AAOE,QAAA,QAAQ,EAAEH,QAAQ,CAACM,KAAD,CAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAeD;;;;EA1CqBvB,KAAK,CAACwB,S;;AA6C9B,eAAed,SAAf","sourcesContent":["import React from 'react';\n\nconst ERR_TEXT = 'Minimum 3 characaters';\nconst ERR_MAIL = 'Invalid email address';\nconst ERR_TEL = 'Invalid phone number';\nconst ERR_PASS = 'Minimum 6 characaters';\nconst ERR_SELECT = 'You must choose one option';\nconst ERR_FORMS = 'Something wrong, did you fill up everything correctly?';\n\nconst REGEX_MAIL = RegExp(\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\nconst REGEX_TEL = /[0-9]{3}-[0-9]{3}-[0-9]{4}/;\n\nclass InputText extends React.Component {\n  handleError = (value, type) => {\n    switch (type) {\n      case 'text':\n        return value.length < 3 ? ERR_TEXT : null;\n      case 'email':\n        return REGEX_MAIL.test(value) ? null : ERR_MAIL;\n      case 'tel':\n        return REGEX_TEL.test(value) ? null : ERR_TEL;\n      default:\n        return ERR_FORMS;\n    }\n  };\n\n  render() {\n    const {\n      hasError,\n      label,\n      name,\n      onChange,\n      placeholder,\n      showError,\n      type,\n      value\n    } = this.props;\n    const error = this.handleError(value, type);\n\n    return (\n      <div>\n        <label htmlFor={name}>{label}</label>\n        {showError ? <span>{error}</span> : null}\n        <input\n          id={name}\n          placeholder={placeholder}\n          name={name}\n          type={type}\n          value={value}\n          onChange={onChange}\n          haserror={hasError(error)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default InputText;\n"]},"metadata":{},"sourceType":"module"}