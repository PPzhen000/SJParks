{"ast":null,"code":"import _defineProperty from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/users.js\";\nimport React from 'react';\n\nvar inputIsValid = function inputIsValid(name, value) {\n  var isValid;\n\n  switch (name) {\n    case 'fullName':\n      isValid = value.length > 3;\n      break;\n\n    case 'userId':\n      isValid = value.length > 3;\n      break;\n\n    case 'email':\n      isValid = value.length > 3;\n      break;\n\n    case 'password':\n      isValid = value.length > 3;\n      break;\n\n    case 'passwordCheck':\n      isValid = value.length > 3;\n      break;\n\n    case 'accessType':\n      isValid = value.length > 3;\n      break;\n  }\n\n  return isValid;\n};\n\nvar Users =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(userInput, _React$Component);\n\n  function userInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, userInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(userInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fullName: '',\n      userId: '',\n      email: '',\n      password: '',\n      passwordCheck: '',\n      accessType: 'updates',\n      formError: {\n        fullName: false,\n        userId: false,\n        email: false,\n        password: false,\n        passwordCheck: false,\n        accessType: false\n      }\n    };\n\n    _this.handleChange = function (event) {\n      var _this$setState;\n\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, \"formError\", _objectSpread({}, _this.state.formError, _defineProperty({}, name, inputIsValid(name, value)))), _this$setState));\n\n      console.log(_this.state);\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n    };\n\n    return _this;\n  }\n\n  _createClass(userInput, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"USERS\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"fullName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Full Name:\"), React.createElement(\"input\", {\n        id: \"fullName\",\n        placeholder: \"Full Name\",\n        name: \"fullName\",\n        type: \"text\",\n        value: this.state.fullName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"userId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"User ID: \"), React.createElement(\"input\", {\n        id: \"userId\",\n        placeholder: \"User ID\",\n        name: \"userId\",\n        type: \"text\",\n        value: this.state.userId,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(\"input\", {\n        id: \"email\",\n        placeholder: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Password:\"), React.createElement(\"input\", {\n        id: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"passwordCheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Confirm Password:\"), React.createElement(\"input\", {\n        id: \"passwordCheck\",\n        placeholder: \"Confirm Password\",\n        name: \"passwordCheck\",\n        type: \"password\",\n        value: this.state.passwordCheck,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"accessType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Access Type:\"), React.createElement(\"select\", {\n        id: \"accessType\",\n        name: \"accessType\",\n        value: this.state.accessType,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"updates\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Updates Only\"), React.createElement(\"option\", {\n        value: \"premium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Premiun Access\")), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Create New User\")));\n    }\n  }]);\n\n  return userInput;\n}(React.Component);\n\nexport default Users;","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/users.js"],"names":["React","inputIsValid","name","value","isValid","length","Users","state","fullName","userId","email","password","passwordCheck","accessType","formError","handleChange","event","target","setState","console","log","handleSubmit","preventDefault","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst inputIsValid = (name, value) => {\n  let isValid;\n\n  switch (name) {\n    case 'fullName':\n      isValid = value.length > 3;\n      break;\n    case 'userId':\n      isValid = value.length > 3;\n      break;\n    case 'email':\n      isValid = value.length > 3;\n      break;\n    case 'password':\n      isValid = value.length > 3;\n      break;\n    case 'passwordCheck':\n      isValid = value.length > 3;\n      break;\n    case 'accessType':\n      isValid = value.length > 3;\n      break;\n  }\n\n  return isValid;\n};\n\nconst Users = class userInput extends React.Component {\n  state = {\n    fullName: '',\n    userId: '',\n    email: '',\n    password: '',\n    passwordCheck: '',\n    accessType: 'updates',\n    formError: {\n      fullName: false,\n      userId: false,\n      email: false,\n      password: false,\n      passwordCheck: false,\n      accessType: false\n    }\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n      formError: {\n        ...this.state.formError,\n        [name]: inputIsValid(name, value)\n      }\n    });\n\n    console.log(this.state);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>USERS</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor='fullName'>Full Name:</label>\n          <input\n            id='fullName'\n            placeholder='Full Name'\n            name='fullName'\n            type='text'\n            value={this.state.fullName}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='userId'>User ID: </label>\n          <input\n            id='userId'\n            placeholder='User ID'\n            name='userId'\n            type='text'\n            value={this.state.userId}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='email'>Email:</label>\n          <input\n            id='email'\n            placeholder='Email'\n            name='email'\n            type='email'\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='password'>Password:</label>\n          <input\n            id='password'\n            placeholder='Password'\n            name='password'\n            type='password'\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='passwordCheck'>Confirm Password:</label>\n          <input\n            id='passwordCheck'\n            placeholder='Confirm Password'\n            name='passwordCheck'\n            type='password'\n            value={this.state.passwordCheck}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='accessType'>Access Type:</label>\n          <select\n            id='accessType'\n            name='accessType'\n            value={this.state.accessType}\n            onChange={this.handleChange}>\n            <option value='updates'>Updates Only</option>\n            <option value='premium'>Premiun Access</option>\n          </select>\n\n          <button type='submit'>Create New User</button>\n        </form>\n      </div>\n    );\n  }\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}