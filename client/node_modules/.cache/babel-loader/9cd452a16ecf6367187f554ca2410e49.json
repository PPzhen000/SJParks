{"ast":null,"code":"import _objectSpread from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/users.js\";\nimport React from 'react';\nvar ERR_TEXT = 'minimum 3 characaters';\nvar ERR_MAIL = 'invalid email address';\nvar ERR_PASS = 'minimum 6 characaters';\nvar ERR_SELECT = 'You must choose one option';\nvar REGEX_MAIL = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nvar Users =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(userInput, _React$Component);\n\n  function userInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, userInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(userInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fullName: '',\n      userId: '',\n      email: '',\n      password: '',\n      passwordCheck: '',\n      accessType: 'updates',\n      formsError: {\n        fullName: false,\n        userId: false,\n        email: false,\n        password: false,\n        passwordCheck: false,\n        accessType: false\n      },\n      showError: false\n    };\n\n    _this.handleChange = function (event) {\n      var _this$setState;\n\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      var formsError = _this.state.formsError;\n      /**\n       * Handle Input rules\n       * Return String or false\n       */\n\n      switch (name) {\n        case 'fullName':\n          formsError[name] = value.length < 3 ? ERR_TEXT : false;\n          break;\n\n        case 'userId':\n          formsError[name] = value.length < 3 ? ERR_TEXT : false;\n          break;\n\n        case 'email':\n          formsError[name] = REGEX_MAIL.test(value) ? false : ERR_MAIL;\n          break;\n\n        case 'password':\n          formsError[name] = value.length < 6 ? ERR_PASS : false;\n          break;\n\n        case 'passwordCheck':\n          formsError[name] = value.length < 6 ? ERR_PASS : false;\n          break;\n\n        case 'accessType':\n          formsError[name] = value === 'updates' ? false : value === 'premium' ? false : ERR_SELECT;\n          break;\n      }\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, \"formsError\", formsError), _this$setState));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          formsError = _this$state.formsError,\n          password = _this$state.password,\n          passwordCheck = _this$state.passwordCheck; // Forms Data to send\n\n      var data = _objectSpread({}, _this.state);\n\n      delete data.formsError;\n      delete data.passwordCheck;\n      delete data.showError; // Check if the form has error\n\n      var hasError = Object.values(formsError).find(function (error) {\n        return error !== false;\n      });\n      var dataIsEmpty = Object.values(data).includes(function (val) {\n        return val === '';\n      });\n      console.log('data', Object.values(data));\n      console.log('dataIsEmpty', dataIsEmpty);\n      var passIsEqual = password === passwordCheck; // If Forms have error show them\n\n      if (hasError || !passIsEqual || dataIsEmpty) _this.setState({\n        showError: true\n      }); // If Forms is valid send data Forms to the server\n\n      if (!hasError && passIsEqual && !dataIsEmpty) {\n        console.log('SEND DATA');\n        var payload = {\n          method: 'POST',\n          body: data\n        };\n        fetch('/admin/newuser', payload).then(function (res) {\n          return console.log(res);\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(userInput, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"USERS\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"fullName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Full Name:\"), this.state.showError && this.state.formsError.fullName, React.createElement(\"input\", {\n        id: \"fullName\",\n        placeholder: \"Full Name\",\n        name: \"fullName\",\n        type: \"text\",\n        value: this.state.fullName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"userId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"User ID: \"), this.state.showError && this.state.formsError.userId, React.createElement(\"input\", {\n        id: \"userId\",\n        placeholder: \"User ID\",\n        name: \"userId\",\n        type: \"text\",\n        value: this.state.userId,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Email:\"), this.state.showError && this.state.formsError.email, React.createElement(\"input\", {\n        id: \"email\",\n        placeholder: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Password:\"), this.state.showError && this.state.formsError.password, React.createElement(\"input\", {\n        id: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"passwordCheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Confirm Password:\"), this.state.showError && this.state.formsError.passwordCheck, React.createElement(\"input\", {\n        id: \"passwordCheck\",\n        placeholder: \"Confirm Password\",\n        name: \"passwordCheck\",\n        type: \"password\",\n        value: this.state.passwordCheck,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"accessType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Access Type:\"), this.state.showError && this.state.formsError.accessType, React.createElement(\"select\", {\n        id: \"accessType\",\n        name: \"accessType\",\n        value: this.state.accessType,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"updates\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Updates Only\"), React.createElement(\"option\", {\n        value: \"premium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Premiun Access\")), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Create New User\")));\n    }\n  }]);\n\n  return userInput;\n}(React.Component);\n\nexport default Users;","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/users.js"],"names":["React","ERR_TEXT","ERR_MAIL","ERR_PASS","ERR_SELECT","REGEX_MAIL","RegExp","Users","state","fullName","userId","email","password","passwordCheck","accessType","formsError","showError","handleChange","event","target","name","value","length","test","setState","handleSubmit","preventDefault","data","hasError","Object","values","find","error","dataIsEmpty","includes","val","console","log","passIsEqual","payload","method","body","fetch","then","res","catch","err","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst ERR_TEXT = 'minimum 3 characaters';\nconst ERR_MAIL = 'invalid email address';\nconst ERR_PASS = 'minimum 6 characaters';\nconst ERR_SELECT = 'You must choose one option';\n\nconst REGEX_MAIL = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst Users = class userInput extends React.Component {\n  state = {\n    fullName: '',\n    userId: '',\n    email: '',\n    password: '',\n    passwordCheck: '',\n    accessType: 'updates',\n    formsError: {\n      fullName: false,\n      userId: false,\n      email: false,\n      password: false,\n      passwordCheck: false,\n      accessType: false\n    },\n    showError: false\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    const { formsError } = this.state;\n\n    /**\n     * Handle Input rules\n     * Return String or false\n     */\n    switch (name) {\n      case 'fullName':\n        formsError[name] = value.length < 3 ? ERR_TEXT : false;\n        break;\n      case 'userId':\n        formsError[name] = value.length < 3 ? ERR_TEXT : false;\n        break;\n      case 'email':\n        formsError[name] = REGEX_MAIL.test(value) ? false : ERR_MAIL;\n        break;\n      case 'password':\n        formsError[name] = value.length < 6 ? ERR_PASS : false;\n        break;\n      case 'passwordCheck':\n        formsError[name] = value.length < 6 ? ERR_PASS : false;\n        break;\n      case 'accessType':\n        formsError[name] =\n          value === 'updates'\n            ? false\n            : value === 'premium'\n            ? false\n            : ERR_SELECT;\n        break;\n    }\n\n    this.setState({ [name]: value, formsError });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { formsError, password, passwordCheck } = this.state;\n\n    // Forms Data to send\n    const data = { ...this.state };\n    delete data.formsError;\n    delete data.passwordCheck;\n    delete data.showError;\n\n    // Check if the form has error\n    const hasError = Object.values(formsError).find(error => error !== false);\n    const dataIsEmpty = Object.values(data).includes(val => val === '');\n    console.log('data', Object.values(data));\n    console.log('dataIsEmpty', dataIsEmpty);\n\n    const passIsEqual = password === passwordCheck;\n\n    // If Forms have error show them\n    if (hasError || !passIsEqual || dataIsEmpty)\n      this.setState({ showError: true });\n\n    // If Forms is valid send data Forms to the server\n    if (!hasError && passIsEqual && !dataIsEmpty) {\n      console.log('SEND DATA');\n      const payload = {\n        method: 'POST',\n        body: data\n      };\n\n      fetch('/admin/newuser', payload)\n        .then(res => console.log(res))\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>USERS</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor='fullName'>Full Name:</label>\n          {this.state.showError && this.state.formsError.fullName}\n          <input\n            id='fullName'\n            placeholder='Full Name'\n            name='fullName'\n            type='text'\n            value={this.state.fullName}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='userId'>User ID: </label>\n          {this.state.showError && this.state.formsError.userId}\n          <input\n            id='userId'\n            placeholder='User ID'\n            name='userId'\n            type='text'\n            value={this.state.userId}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='email'>Email:</label>\n          {this.state.showError && this.state.formsError.email}\n          <input\n            id='email'\n            placeholder='Email'\n            name='email'\n            type='email'\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='password'>Password:</label>\n          {this.state.showError && this.state.formsError.password}\n          <input\n            id='password'\n            placeholder='Password'\n            name='password'\n            type='password'\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='passwordCheck'>Confirm Password:</label>\n          {this.state.showError && this.state.formsError.passwordCheck}\n          <input\n            id='passwordCheck'\n            placeholder='Confirm Password'\n            name='passwordCheck'\n            type='password'\n            value={this.state.passwordCheck}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='accessType'>Access Type:</label>\n          {this.state.showError && this.state.formsError.accessType}\n          <select\n            id='accessType'\n            name='accessType'\n            value={this.state.accessType}\n            onChange={this.handleChange}>\n            <option value='updates'>Updates Only</option>\n            <option value='premium'>Premiun Access</option>\n          </select>\n\n          <button type='submit'>Create New User</button>\n        </form>\n      </div>\n    );\n  }\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}