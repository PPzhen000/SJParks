{"ast":null,"code":"import _slicedToArray from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/UI/Form/select.js\";\n\nimport React from 'react';\nvar ERR_SELECT = 'You must choose one option';\n\nvar Select = function Select() {\n  var handleError = function handleError(value) {\n    var option = Object.keys(_this.props.options).find(function (el) {\n      return el === value;\n    });\n    return option ? null : ERR_SELECT;\n  };\n\n  var _props = props,\n      hasError = _props.hasError,\n      label = _props.label,\n      name = _props.name,\n      onChange = _props.onChange,\n      options = _props.options,\n      showError = _props.showError,\n      value = _props.value;\n  var error = handleError(value);\n  var optionsList = Object.entries(options).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return React.createElement(\"option\", {\n      key: key,\n      value: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, value);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, label), React.createElement(\"select\", {\n    id: name,\n    name: name,\n    value: value,\n    onChange: onChange,\n    haserror: hasError(error),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, optionsList), showError ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, error) : null);\n}; // {\n//   render() {\n//     return (\n//     );\n//   }\n// }\n\n\nexport default Select;","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/UI/Form/select.js"],"names":["React","ERR_SELECT","Select","handleError","value","option","Object","keys","props","options","find","el","hasError","label","name","onChange","showError","error","optionsList","entries","map","key"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,UAAU,GAAG,4BAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3B,QAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAI,CAACC,KAAL,CAAWC,OAAvB,EAAgCC,IAAhC,CAAqC,UAAAC,EAAE;AAAA,aAAIA,EAAE,KAAKP,KAAX;AAAA,KAAvC,CAAf;AACA,WAAOC,MAAM,GAAG,IAAH,GAAUJ,UAAvB;AACD,GAHD;;AADmB,eAMoDO,KANpD;AAAA,MAMXI,QANW,UAMXA,QANW;AAAA,MAMDC,KANC,UAMDA,KANC;AAAA,MAMMC,IANN,UAMMA,IANN;AAAA,MAMYC,QANZ,UAMYA,QANZ;AAAA,MAMsBN,OANtB,UAMsBA,OANtB;AAAA,MAM+BO,SAN/B,UAM+BA,SAN/B;AAAA,MAM0CZ,KAN1C,UAM0CA,KAN1C;AAQnB,MAAMa,KAAK,GAAGd,WAAW,CAACC,KAAD,CAAzB;AACA,MAAMc,WAAW,GAAGZ,MAAM,CAACa,OAAP,CAAeV,OAAf,EAAwBW,GAAxB,CAA4B;AAAA;AAAA,QAAEC,GAAF;AAAA,QAAOjB,KAAP;;AAAA,WAC9C;AAAQ,MAAA,GAAG,EAAEiB,GAAb;AAAkB,MAAA,KAAK,EAAEA,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjB,KADH,CAD8C;AAAA,GAA5B,CAApB;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAEU,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAvB,CADF,EAGE;AACE,IAAA,EAAE,EAAEC,IADN;AAEE,IAAA,IAAI,EAAEA,IAFR;AAGE,IAAA,KAAK,EAAEV,KAHT;AAIE,IAAA,QAAQ,EAAEW,QAJZ;AAKE,IAAA,QAAQ,EAAEH,QAAQ,CAACK,KAAD,CALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGC,WANH,CAHF,EAYGF,SAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,KAAP,CAAH,GAA0B,IAZtC,CADF;AAgBD,CA/BD,C,CAiCA;AAEA;AAEA;AAEA;AACA;AACA;;;AAEA,eAAef,MAAf","sourcesContent":["import React from 'react';\n\nconst ERR_SELECT = 'You must choose one option';\n\nconst Select = () => {\n  const handleError = value => {\n    const option = Object.keys(this.props.options).find(el => el === value);\n    return option ? null : ERR_SELECT;\n  };\n\n  const { hasError, label, name, onChange, options, showError, value } = props;\n\n  const error = handleError(value);\n  const optionsList = Object.entries(options).map(([key, value]) => (\n    <option key={key} value={key}>\n      {value}\n    </option>\n  ));\n\n  return (\n    <div>\n      <label htmlFor={name}>{label}</label>\n\n      <select\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        haserror={hasError(error)}>\n        {optionsList}\n      </select>\n\n      {showError ? <span>{error}</span> : null}\n    </div>\n  );\n};\n\n// {\n\n//   render() {\n\n//     return (\n\n//     );\n//   }\n// }\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}