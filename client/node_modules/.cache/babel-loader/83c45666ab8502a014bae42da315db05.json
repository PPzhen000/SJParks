{"ast":null,"code":"import _classCallCheck from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/historypost.js\";\nimport React, { Component } from 'react';\n\nvar Post =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Post, _React$Component);\n\n  function Post() {\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Post).call(this));\n\n    _this.showMore = function () {\n      _this.state.loadMore ? _this.setState({\n        loadMore: false\n      }) : _this.setState({\n        loadMore: true\n      });\n    };\n\n    _this.open = function () {\n      _this.state.isOpen ? _this.setState({\n        isOpen: false\n      }) : _this.setState({\n        isOpen: true\n      });\n    };\n\n    _this.state = {\n      loadMore: false,\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.state.isOpen ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.open,\n        className: \"dark-blue white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.post.name), React.createElement(\"p\", {\n        className: \"white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.post.date, \" at \", this.props.post.time)), React.createElement(\"div\", {\n        className: \"gray bottom-round\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.props.post.parkIDs.length < 3 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.props.post.parkIDs.map(function (parkID, index) {\n        return (//show all parkID's and no button\n          React.createElement(\"p\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, parkID)\n        );\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.state.loadMore ? //if length >3 check loadMore === true - show all & button \n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.props.post.parkIDs.map(function (parkID, index) {\n        return (//show all parkID's and no button\n          React.createElement(\"p\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, parkID)\n        );\n      }), React.createElement(\"button\", {\n        onClick: this.showMore,\n        className: \"blue-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Show less\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.props.post.parkIDs.slice(0, 3).map(function (parkID, index) {\n        return (//show all parkID's and no button\n          React.createElement(\"p\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, parkID)\n        );\n      }), React.createElement(\"button\", {\n        onClick: this.showMore,\n        className: \"blue-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.props.post.parkIDs.length > 3 ? (this.props.post.parkIDs.length - 3).toString() + \" more..\" : null)))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.props.post.message)) : //if the section isOpen === false\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.open,\n        className: \"dark-blue white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-right text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.props.post.name), React.createElement(\"p\", {\n        className: \"white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.props.post.date, \" at \", this.props.post.time))));\n    }\n  }]);\n\n  return Post;\n}(React.Component);\n\nexport { Post as default };","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/historypost.js"],"names":["React","Component","Post","showMore","state","loadMore","setState","open","isOpen","props","post","name","date","time","parkIDs","length","map","parkID","index","slice","toString","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'   \n\nexport default class Post extends React.Component{\n  constructor() {\n    super()\n    this.state = {\n      loadMore: false,\n      isOpen: false,\n    }\n    }\n\n  showMore = () =>{\n    this.state.loadMore ? this.setState({loadMore: false}) : this.setState({loadMore: true})\n  }  \n  open = () =>{\n    this.state.isOpen ? this.setState({isOpen: false}) : this.setState({isOpen: true})\n  }     \n      \n  render (){\n    return (\n        <div>\n        {this.state.isOpen ? (\n            <div>\n                <div onClick={this.open} className=\"dark-blue white-text\">\n                        <i className=\"fas fa-caret-down text-primary\"></i>\n                    <p className=\"white-text\">{this.props.post.name}</p>\n                    <p className=\"white-text\">{this.props.post.date} at {this.props.post.time}</p>\n                </div>\n\n                <div className=\"gray bottom-round\">\n                \n                        {this.props.post.parkIDs.length<3 ? ( \n                            <div>\n                            {this.props.post.parkIDs.map((parkID, index)=> //show all parkID's and no button\n                                <p key={index}>{parkID}</p>\n                            )}\n                            </div>\n                        ) : ( \n                            <div>\n                            {this.state.loadMore ? ( //if length >3 check loadMore === true - show all & button \n                                <div>\n                                    {this.props.post.parkIDs.map((parkID, index)=> //show all parkID's and no button\n                                        <p key={index}>{parkID}</p>\n                                    )}\n                                    <button onClick={this.showMore}\n                                    className=\"blue-link\">Show less</button>\n                                </div>\n                                \n                            ) : (\n                                <div>\n                                    {this.props.post.parkIDs.slice(0, 3).map((parkID, index)=> //show all parkID's and no button\n                                        <p key={index}>{parkID}</p>\n                                    )}\n                                    <button onClick={this.showMore}\n                                    className=\"blue-link\">{this.props.post.parkIDs.length>3 ? (\n                                        this.props.post.parkIDs.length-3).toString()+\" more..\" : null}\n                                    </button>\n                                </div>\n                            )}\n                            </div> \n                        )\n                        }\n                </div>\n\n                <p>{this.props.post.message}</p>\n            </div>\n        ) : ( //if the section isOpen === false\n            <div>\n                <div onClick={this.open} className=\"dark-blue white-text\">\n                        <i className=\"fas fa-caret-right text-primary\"></i>\n                    <p className=\"white-text\">{this.props.post.name}</p>\n                    <p className=\"white-text\">{this.props.post.date} at {this.props.post.time}</p>\n                </div>\n            </div>\n        )\n        }\n        </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}