{"ast":null,"code":"import _slicedToArray from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/UI/Form/select.js\";\nimport React from 'react';\nvar ERR_SELECT = 'You must choose one option';\n\nvar Select = function Select(props) {\n  var hasError = props.hasError,\n      label = props.label,\n      name = props.name,\n      onChange = props.onChange,\n      options = props.options,\n      showError = props.showError,\n      value = props.value; // const handleError = value => {\n  //   const option = Object.keys(props.options).find(el => el === value);\n  //   return option ? null : ERR_SELECT;\n  // };\n\n  var error = function error(value) {\n    var option = Object.keys(props.options).find(function (el) {\n      return el === value;\n    });\n    return option ? null : ERR_SELECT;\n  }; // const error = handleError(value);\n\n\n  var optionsList = Object.entries(options).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return React.createElement(\"option\", {\n      key: key,\n      value: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, value);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, label), React.createElement(\"select\", {\n    id: name,\n    name: name,\n    value: value,\n    onChange: onChange,\n    haserror: error(error),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, optionsList), showError ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, error) : null);\n};\n\nexport default Select;","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/UI/Form/select.js"],"names":["React","ERR_SELECT","Select","props","hasError","label","name","onChange","options","showError","value","error","option","Object","keys","find","el","optionsList","entries","map","key"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,UAAU,GAAG,4BAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AAAA,MACdC,QADc,GACiDD,KADjD,CACdC,QADc;AAAA,MACJC,KADI,GACiDF,KADjD,CACJE,KADI;AAAA,MACGC,IADH,GACiDH,KADjD,CACGG,IADH;AAAA,MACSC,QADT,GACiDJ,KADjD,CACSI,QADT;AAAA,MACmBC,OADnB,GACiDL,KADjD,CACmBK,OADnB;AAAA,MAC4BC,SAD5B,GACiDN,KADjD,CAC4BM,SAD5B;AAAA,MACuCC,KADvC,GACiDP,KADjD,CACuCO,KADvC,EAEtB;AACA;AACA;AACA;;AACA,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAD,KAAK,EAAI;AACrB,QAAME,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYX,KAAK,CAACK,OAAlB,EAA2BO,IAA3B,CAAgC,UAAAC,EAAE;AAAA,aAAIA,EAAE,KAAKN,KAAX;AAAA,KAAlC,CAAf;AACA,WAAOE,MAAM,GAAG,IAAH,GAAUX,UAAvB;AACD,GAHD,CANsB,CAWtB;;;AACA,MAAMgB,WAAW,GAAGJ,MAAM,CAACK,OAAP,CAAeV,OAAf,EAAwBW,GAAxB,CAA4B;AAAA;AAAA,QAAEC,GAAF;AAAA,QAAOV,KAAP;;AAAA,WAC9C;AAAQ,MAAA,GAAG,EAAEU,GAAb;AAAkB,MAAA,KAAK,EAAEA,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,KADH,CAD8C;AAAA,GAA5B,CAApB;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAEJ,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAvB,CADF,EAGE;AACE,IAAA,EAAE,EAAEC,IADN;AAEE,IAAA,IAAI,EAAEA,IAFR;AAGE,IAAA,KAAK,EAAEI,KAHT;AAIE,IAAA,QAAQ,EAAEH,QAJZ;AAKE,IAAA,QAAQ,EAAEI,KAAK,CAACA,KAAD,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGM,WANH,CAHF,EAYGR,SAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,KAAP,CAAH,GAA0B,IAZtC,CADF;AAgBD,CAlCD;;AAoCA,eAAeT,MAAf","sourcesContent":["import React from 'react';\n\nconst ERR_SELECT = 'You must choose one option';\n\nconst Select = props => {\n  const { hasError, label, name, onChange, options, showError, value } = props;\n  // const handleError = value => {\n  //   const option = Object.keys(props.options).find(el => el === value);\n  //   return option ? null : ERR_SELECT;\n  // };\n  const error = value => {\n    const option = Object.keys(props.options).find(el => el === value);\n    return option ? null : ERR_SELECT;\n  };\n\n  // const error = handleError(value);\n  const optionsList = Object.entries(options).map(([key, value]) => (\n    <option key={key} value={key}>\n      {value}\n    </option>\n  ));\n\n  return (\n    <div>\n      <label htmlFor={name}>{label}</label>\n\n      <select\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        haserror={error(error)}>\n        {optionsList}\n      </select>\n\n      {showError ? <span>{error}</span> : null}\n    </div>\n  );\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}