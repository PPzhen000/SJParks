{"ast":null,"code":"import _defineProperty from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/NewUpdate.js\";\nimport React, { Component } from 'react';\nimport { parksDB } from '../dummyDB';\nexport var newUpdate =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(newUpdate, _Component);\n\n  function newUpdate(props) {\n    var _this;\n\n    _classCallCheck(this, newUpdate);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(newUpdate).call(this, props));\n\n    _this.handleInput = function (e) {\n      //generic handleInput handles the change for any input field using the name and the value properties.\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      console.log('name', name);\n      console.log('value', value);\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFilter = function (e) {\n      e.preventDefault();\n\n      var filtered = _this.state.lists.filter(function (item) {\n        return item.name.includes(_this.state.filter);\n      });\n\n      _this.setState({\n        filteredLists: filtered,\n        filter: ''\n      });\n    };\n\n    _this.handleFilter = _this.handleFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      lists: [{\n        name: 'Municipal Rose Garden',\n        key: 'ROSE'\n      }],\n      filteredLists: [],\n      selectedLists: [],\n      filter: ''\n    };\n    return _this;\n  }\n\n  _createClass(newUpdate, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        lists: parksDB\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(parksDB);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"filter\",\n        value: this.state.filter,\n        onChange: this.handleInput,\n        type: \"text\",\n        id: \"filter\",\n        placeholder: \"Search Parks..\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Search\")), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Select All\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.filteredLists.map(function (list) {\n        return React.createElement(\"li\", {\n          key: list._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, list.name), \"-\", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, list.parkID));\n      }))));\n    }\n  }]);\n\n  return newUpdate;\n}(Component);\nexport default newUpdate;","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/NewUpdate.js"],"names":["React","Component","parksDB","newUpdate","props","handleInput","e","target","name","value","console","log","setState","handleFilter","preventDefault","filtered","state","lists","filter","item","includes","filteredLists","bind","key","selectedLists","map","list","_id","parkID"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { parksDB } from '../dummyDB';\n\nexport class newUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.state = {\n      lists: [{ name: 'Municipal Rose Garden', key: 'ROSE' }],\n      filteredLists: [],\n      selectedLists: [],\n      filter: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ lists: parksDB });\n  }\n\n  handleInput = e => {\n    //generic handleInput handles the change for any input field using the name and the value properties.\n    const { name, value } = e.target;\n    console.log('name', name);\n    console.log('value', value);\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFilter = e => {\n    e.preventDefault();\n    const filtered = this.state.lists.filter(item => {\n      return item.name.includes(this.state.filter);\n    });\n    this.setState({\n      filteredLists: filtered,\n      filter: ''\n    });\n  };\n  render() {\n    console.log(parksDB);\n    return (\n      <div>\n        <div>\n          <form onSubmit={this.handleFilter}>\n            <input\n              name='filter'\n              value={this.state.filter}\n              onChange={this.handleInput}\n              type='text'\n              id='filter'\n              placeholder='Search Parks..'\n            />\n            <button type='submit'>Search</button>\n          </form>\n          <button>Select All</button>\n          <ul>\n            {this.state.filteredLists.map(list => (\n              <li key={list._id}>\n                <span>{list.name}</span>-<span>{list.parkID}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default newUpdate;\n"]},"metadata":{},"sourceType":"module"}