{"ast":null,"code":"import _toConsumableArray from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/Users/Users.js\";\nimport React from 'react';\nimport './users.css';\nimport Input from '../UI/Input';\nimport UserList from './UserList';\n/**\n * DUMMY DATA\n */\n\nvar DATA = [{\n  fullName: 'John Doe',\n  userId: 'john.doe100',\n  email: 'john@mail.com',\n  accessType: 'updates'\n}, {\n  fullName: 'Jeanne Doe',\n  userId: 'jeanne.doe200',\n  email: 'jeanne@mail.com',\n  accessType: 'updates'\n}, {\n  fullName: 'Bobby Doe',\n  userId: 'bobby.doe300',\n  email: 'bobby@mail.com',\n  accessType: 'updates'\n}];\n\nvar Users =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(userInput, _React$Component);\n\n  function userInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, userInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(userInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fullName: '',\n      userId: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      showError: ''\n    };\n\n    _this.handleChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.hasError = function (err) {\n      return err;\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      var hasError = _this.hasError();\n\n      var _this$state = _this.state,\n          confirmPassword = _this$state.confirmPassword,\n          email = _this$state.email,\n          fullName = _this$state.fullName,\n          password = _this$state.password,\n          userId = _this$state.userId;\n      var data = {\n        email: email,\n        fullName: fullName,\n        password: password,\n        userId: userId\n      }; // Check if the form has error\n\n      var passIsEqual = password === confirmPassword;\n      var dataIsEmpty = Object.values(data).includes('');\n\n      if (hasError || dataIsEmpty || !passIsEqual) {\n        _this.setState({\n          showError: true\n        });\n      } // If Forms is valid send data Forms to the server\n\n\n      if (!hasError && passIsEqual && !dataIsEmpty) {\n        var payload = {\n          method: 'POST',\n          body: JSON.stringify(data)\n        };\n        fetch('/admin/newuser', payload).then(function (res) {\n          return console.log(res);\n        }).catch(function (err) {\n          return console.log(err);\n        }); // FOR TESTING ONLY with dummy data\n\n        _this.setState({\n          users: _toConsumableArray(_this.state.users).concat([data])\n        });\n\n        console.log('SEND DATA', data);\n      }\n\n      console.log('UsersPage', _this.state);\n    };\n\n    return _this;\n  }\n\n  _createClass(userInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Get data from the db\n      this.setState({\n        users: DATA\n      });\n    } // case 'accessType':\n    //   formsError[name] =\n    //     value === 'updates'\n    //       ? false\n    //       : value === 'premium'\n    //       ? false\n    //       : ERR_SELECT;\n\n  }, {\n    key: \"handleShowUser\",\n    value: function handleShowUser() {\n      this.setState({\n        showUser: !this.state.showUser\n      });\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(userId) {\n      var users = this.state.users;\n      this.setState({\n        users: users.filter(function (user) {\n          return user.userId != userId;\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"USERS\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        style: {\n          display: 'grid'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Input, {\n        label: \"Full Name\",\n        placeholder: \"John Doe\",\n        name: \"fullName\",\n        type: \"text\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        value: this.state.fullName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"User Id\",\n        placeholder: \"john42\",\n        name: \"userId\",\n        type: \"text\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"Email\",\n        placeholder: \"john.doe@mail.com\",\n        name: \"email\",\n        type: \"email\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"Password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"Confirm Password\",\n        placeholder: \"Confirm Password\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.confirmPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Create New User\")), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Show a list of users\"), this.state.users && this.state.users.map(function (user) {\n        return React.createElement(UserList, {\n          key: user.userId,\n          fullName: user.fullName,\n          userId: user.userId,\n          email: user.email,\n          accessType: user.accessType,\n          delete: function _delete() {\n            return _this2.handleDelete(user.userId);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return userInput;\n}(React.Component);\n\nexport default Users;","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/Users/Users.js"],"names":["React","Input","UserList","DATA","fullName","userId","email","accessType","Users","state","password","confirmPassword","showError","handleChange","e","setState","target","name","value","hasError","err","handleSubmit","event","preventDefault","data","passIsEqual","dataIsEmpty","Object","values","includes","payload","method","body","JSON","stringify","fetch","then","res","console","log","catch","users","showUser","filter","user","display","map","handleDelete","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './users.css';\nimport Input from '../UI/Input';\nimport UserList from './UserList';\n\n/**\n * DUMMY DATA\n */\nconst DATA = [\n  {\n    fullName: 'John Doe',\n    userId: 'john.doe100',\n    email: 'john@mail.com',\n    accessType: 'updates'\n  },\n  {\n    fullName: 'Jeanne Doe',\n    userId: 'jeanne.doe200',\n    email: 'jeanne@mail.com',\n    accessType: 'updates'\n  },\n  {\n    fullName: 'Bobby Doe',\n    userId: 'bobby.doe300',\n    email: 'bobby@mail.com',\n    accessType: 'updates'\n  }\n];\n\nconst Users = class userInput extends React.Component {\n  // state = {\n  //   fullName: '',\n  //   userId: '',\n  //   email: '',\n  //   password: '',\n  //   passwordCheck: '',\n  //   accessType: 'updates',\n  //   formsError: {\n  //     fullName: false,\n  //     userId: false,\n  //     email: false,\n  //     password: false,\n  //     passwordCheck: false,\n  //     accessType: false\n  //   },\n  //   showError: false\n  // };\n\n  state = {\n    fullName: '',\n    userId: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    showError: ''\n  };\n\n  componentDidMount() {\n    // Get data from the db\n    this.setState({ users: DATA });\n  }\n\n  // case 'accessType':\n  //   formsError[name] =\n  //     value === 'updates'\n  //       ? false\n  //       : value === 'premium'\n  //       ? false\n  //       : ERR_SELECT;\n\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\n  hasError = err => err;\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const hasError = this.hasError();\n    const { confirmPassword, email, fullName, password, userId } = this.state;\n    const data = { email, fullName, password, userId };\n\n    // Check if the form has error\n    const passIsEqual = password === confirmPassword;\n    const dataIsEmpty = Object.values(data).includes('');\n\n    if (hasError || dataIsEmpty || !passIsEqual) {\n      this.setState({ showError: true });\n    }\n\n    // If Forms is valid send data Forms to the server\n    if (!hasError && passIsEqual && !dataIsEmpty) {\n      const payload = { method: 'POST', body: JSON.stringify(data) };\n\n      fetch('/admin/newuser', payload)\n        .then(res => console.log(res))\n        .catch(err => console.log(err));\n\n      // FOR TESTING ONLY with dummy data\n      this.setState({ users: [...this.state.users, data] });\n      console.log('SEND DATA', data);\n    }\n\n    console.log('UsersPage', this.state);\n  };\n\n  handleShowUser() {\n    this.setState({ showUser: !this.state.showUser });\n  }\n\n  handleDelete(userId) {\n    const { users } = this.state;\n    this.setState({ users: users.filter(user => user.userId != userId) });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>USERS</h1>\n        <form onSubmit={this.handleSubmit} style={{ display: 'grid' }}>\n          <Input\n            label='Full Name'\n            placeholder='John Doe'\n            name='fullName'\n            type='text'\n            showError={this.state.showError}\n            hasError={this.hasError}\n            value={this.state.fullName}\n            onChange={this.handleChange}\n          />\n\n          <Input\n            label='User Id'\n            placeholder='john42'\n            name='userId'\n            type='text'\n            showError={this.state.showError}\n            hasError={this.hasError}\n            onChange={this.handleChange}\n            value={this.state.userId}\n          />\n\n          <Input\n            label='Email'\n            placeholder='john.doe@mail.com'\n            name='email'\n            type='email'\n            showError={this.state.showError}\n            hasError={this.hasError}\n            onChange={this.handleChange}\n            value={this.state.email}\n          />\n\n          <Input\n            label='Password'\n            placeholder='Password'\n            name='password'\n            type='password'\n            showError={this.state.showError}\n            hasError={this.hasError}\n            onChange={this.handleChange}\n            value={this.state.password}\n          />\n\n          <Input\n            label='Confirm Password'\n            placeholder='Confirm Password'\n            name='confirmPassword'\n            type='password'\n            showError={this.state.showError}\n            hasError={this.hasError}\n            onChange={this.handleChange}\n            value={this.state.confirmPassword}\n          />\n\n          {/* <label htmlFor='accessType'>Access Type:</label>\n          {this.state.showError && this.state.formsError.accessType}\n          <select\n            id='accessType'\n            name='accessType'\n            value={this.state.accessType}\n            onChange={this.handleChange}>\n            <option value='updates'>Updates Only</option>\n            <option value='premium'>Premiun Access</option>\n          </select> */}\n\n          <button type='submit'>Create New User</button>\n        </form>\n\n        <h2>Show a list of users</h2>\n        {this.state.users &&\n          this.state.users.map(user => (\n            <UserList\n              key={user.userId}\n              fullName={user.fullName}\n              userId={user.userId}\n              email={user.email}\n              accessType={user.accessType}\n              delete={() => this.handleDelete(user.userId)}\n            />\n          ))}\n      </div>\n    );\n  }\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}