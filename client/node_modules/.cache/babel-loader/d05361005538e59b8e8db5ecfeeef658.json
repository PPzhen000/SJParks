{"ast":null,"code":"import _toConsumableArray from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/Users/UsersForm.js\";\nimport React from 'react';\nimport Input from '../UI/Form/Input';\nimport Select from '../UI/Form/Select'; // const SELECT_OPTIONS = {\n//   updates: 'Updates Only',\n//   premium: 'Premiun Access'\n// };\n\nvar initialState = {\n  fullName: '',\n  userId: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n  showError: false\n};\n\nvar UsersForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(userInput, _React$Component);\n\n  function userInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, userInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(userInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = initialState;\n\n    _this.handleChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.hasError = function (err) {\n      return err;\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      var hasError = _this.hasError();\n\n      var _this$state = _this.state,\n          confirmPassword = _this$state.confirmPassword,\n          email = _this$state.email,\n          fullName = _this$state.fullName,\n          password = _this$state.password,\n          userId = _this$state.userId;\n      var data = {\n        email: email,\n        fullName: fullName,\n        password: password,\n        userId: userId\n      }; // Check if the form has error\n\n      var passIsEqual = password === confirmPassword;\n      var dataIsEmpty = Object.values(data).includes('');\n\n      if (hasError || dataIsEmpty || !passIsEqual) {\n        _this.setState({\n          showError: true\n        });\n      } // If Forms is valid send data Forms to the server\n\n\n      if (!hasError && passIsEqual && !dataIsEmpty) {\n        var payload = {\n          method: 'POST',\n          body: JSON.stringify(data)\n        };\n        fetch('/admin/newuser', payload).then(function (res) {\n          return console.log(res);\n        }).catch(function (err) {\n          return console.log(err);\n        }); // Reset Form field\n\n        _this.setState(initialState); // FOR TESTING ONLY with dummy data\n\n\n        _this.setState({\n          users: _toConsumableArray(_this.state.users).concat([data])\n        });\n\n        console.log('SEND DATA', data);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(userInput, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Input, {\n        label: \"Full Name\",\n        placeholder: \"John Doe\",\n        name: \"fullName\",\n        type: \"text\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        value: this.state.fullName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"User Id\",\n        placeholder: \"john42\",\n        name: \"userId\",\n        type: \"text\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"Email\",\n        placeholder: \"john.doe@mail.com\",\n        name: \"email\",\n        type: \"email\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"Password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"Confirm Password\",\n        placeholder: \"Confirm Password\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.confirmPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Select, {\n        name: \"accessType\",\n        options: SELECT_OPTIONS,\n        showError: this.state.showError,\n        hasError: this.hasError,\n        onChange: this.handleChange,\n        value: this.state.accessType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Create New User\"));\n    }\n  }]);\n\n  return userInput;\n}(React.Component);\n\nexport default UsersForm;","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/Users/UsersForm.js"],"names":["React","Input","Select","initialState","fullName","userId","email","password","confirmPassword","showError","UsersForm","state","handleChange","e","setState","target","name","value","hasError","err","handleSubmit","event","preventDefault","data","passIsEqual","dataIsEmpty","Object","values","includes","payload","method","body","JSON","stringify","fetch","then","res","console","log","catch","users","SELECT_OPTIONS","accessType","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AACA;AACA;AACA;;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,QAAQ,EAAE,EAJS;AAKnBC,EAAAA,eAAe,EAAE,EALE;AAMnBC,EAAAA,SAAS,EAAE;AANQ,CAArB;;AASA,IAAMC,SAAS;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACbC,KADa,GACLR,YADK;;AAAA,UAGbS,YAHa,GAGE,UAAAC,CAAC;AAAA,aAAI,MAAKC,QAAL,qBAAiBD,CAAC,CAACE,MAAF,CAASC,IAA1B,EAAiCH,CAAC,CAACE,MAAF,CAASE,KAA1C,EAAJ;AAAA,KAHH;;AAAA,UAIbC,QAJa,GAIF,UAAAC,GAAG;AAAA,aAAIA,GAAJ;AAAA,KAJD;;AAAA,UAMbC,YANa,GAME,UAAAC,KAAK,EAAI;AACtBA,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAMJ,QAAQ,GAAG,MAAKA,QAAL,EAAjB;;AAFsB,wBAGyC,MAAKP,KAH9C;AAAA,UAGdH,eAHc,eAGdA,eAHc;AAAA,UAGGF,KAHH,eAGGA,KAHH;AAAA,UAGUF,QAHV,eAGUA,QAHV;AAAA,UAGoBG,QAHpB,eAGoBA,QAHpB;AAAA,UAG8BF,MAH9B,eAG8BA,MAH9B;AAItB,UAAMkB,IAAI,GAAG;AAAEjB,QAAAA,KAAK,EAALA,KAAF;AAASF,QAAAA,QAAQ,EAARA,QAAT;AAAmBG,QAAAA,QAAQ,EAARA,QAAnB;AAA6BF,QAAAA,MAAM,EAANA;AAA7B,OAAb,CAJsB,CAMtB;;AACA,UAAMmB,WAAW,GAAGjB,QAAQ,KAAKC,eAAjC;AACA,UAAMiB,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcJ,IAAd,EAAoBK,QAApB,CAA6B,EAA7B,CAApB;;AAEA,UAAIV,QAAQ,IAAIO,WAAZ,IAA2B,CAACD,WAAhC,EAA6C;AAC3C,cAAKV,QAAL,CAAc;AAAEL,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OAZqB,CActB;;;AACA,UAAI,CAACS,QAAD,IAAaM,WAAb,IAA4B,CAACC,WAAjC,EAA8C;AAC5C,YAAMI,OAAO,GAAG;AAAEC,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf;AAAxB,SAAhB;AAEAW,QAAAA,KAAK,CAAC,gBAAD,EAAmBL,OAAnB,CAAL,CACGM,IADH,CACQ,UAAAC,GAAG;AAAA,iBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,SADX,EAEGG,KAFH,CAES,UAAApB,GAAG;AAAA,iBAAIkB,OAAO,CAACC,GAAR,CAAYnB,GAAZ,CAAJ;AAAA,SAFZ,EAH4C,CAO5C;;AACA,cAAKL,QAAL,CAAcX,YAAd,EAR4C,CAU5C;;;AACA,cAAKW,QAAL,CAAc;AAAE0B,UAAAA,KAAK,qBAAM,MAAK7B,KAAL,CAAW6B,KAAjB,UAAwBjB,IAAxB;AAAP,SAAd;;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBf,IAAzB;AACD;AACF,KAnCY;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAqCJ;AACP,aACE;AAAM,QAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,SAAS,EAAE,KAAKT,KAAL,CAAWF,SALxB;AAME,QAAA,QAAQ,EAAE,KAAKS,QANjB;AAOE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWP,QAPpB;AAQE,QAAA,QAAQ,EAAE,KAAKQ,YARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAYE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,WAAW,EAAC,QAFd;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWF,SALxB;AAME,QAAA,QAAQ,EAAE,KAAKS,QANjB;AAOE,QAAA,QAAQ,EAAE,KAAKN,YAPjB;AAQE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWN,MARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAuBE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,WAAW,EAAC,mBAFd;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,SAAS,EAAE,KAAKM,KAAL,CAAWF,SALxB;AAME,QAAA,QAAQ,EAAE,KAAKS,QANjB;AAOE,QAAA,QAAQ,EAAE,KAAKN,YAPjB;AAQE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWL,KARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBF,EAkCE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,SAAS,EAAE,KAAKK,KAAL,CAAWF,SALxB;AAME,QAAA,QAAQ,EAAE,KAAKS,QANjB;AAOE,QAAA,QAAQ,EAAE,KAAKN,YAPjB;AAQE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWJ,QARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlCF,EA6CE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAC,kBADR;AAEE,QAAA,WAAW,EAAC,kBAFd;AAGE,QAAA,IAAI,EAAC,iBAHP;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,SAAS,EAAE,KAAKI,KAAL,CAAWF,SALxB;AAME,QAAA,QAAQ,EAAE,KAAKS,QANjB;AAOE,QAAA,QAAQ,EAAE,KAAKN,YAPjB;AAQE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWH,eARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7CF,EAwDE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,OAAO,EAAEiC,cAFX;AAGE,QAAA,SAAS,EAAE,KAAK9B,KAAL,CAAWF,SAHxB;AAIE,QAAA,QAAQ,EAAE,KAAKS,QAJjB;AAKE,QAAA,QAAQ,EAAE,KAAKN,YALjB;AAME,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAW+B,UANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxDF,EAiEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAjEF,CADF;AAqED;AA3GY;;AAAA;AAAA,EAA2B1C,KAAK,CAAC2C,SAAjC,CAAf;;AA8GA,eAAejC,SAAf","sourcesContent":["import React from 'react';\nimport Input from '../UI/Form/Input';\nimport Select from '../UI/Form/Select';\n\n// const SELECT_OPTIONS = {\n//   updates: 'Updates Only',\n//   premium: 'Premiun Access'\n// };\nconst initialState = {\n  fullName: '',\n  userId: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n  showError: false\n};\n\nconst UsersForm = class userInput extends React.Component {\n  state = initialState;\n\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\n  hasError = err => err;\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const hasError = this.hasError();\n    const { confirmPassword, email, fullName, password, userId } = this.state;\n    const data = { email, fullName, password, userId };\n\n    // Check if the form has error\n    const passIsEqual = password === confirmPassword;\n    const dataIsEmpty = Object.values(data).includes('');\n\n    if (hasError || dataIsEmpty || !passIsEqual) {\n      this.setState({ showError: true });\n    }\n\n    // If Forms is valid send data Forms to the server\n    if (!hasError && passIsEqual && !dataIsEmpty) {\n      const payload = { method: 'POST', body: JSON.stringify(data) };\n\n      fetch('/admin/newuser', payload)\n        .then(res => console.log(res))\n        .catch(err => console.log(err));\n\n      // Reset Form field\n      this.setState(initialState);\n\n      // FOR TESTING ONLY with dummy data\n      this.setState({ users: [...this.state.users, data] });\n      console.log('SEND DATA', data);\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Input\n          label='Full Name'\n          placeholder='John Doe'\n          name='fullName'\n          type='text'\n          showError={this.state.showError}\n          hasError={this.hasError}\n          value={this.state.fullName}\n          onChange={this.handleChange}\n        />\n\n        <Input\n          label='User Id'\n          placeholder='john42'\n          name='userId'\n          type='text'\n          showError={this.state.showError}\n          hasError={this.hasError}\n          onChange={this.handleChange}\n          value={this.state.userId}\n        />\n\n        <Input\n          label='Email'\n          placeholder='john.doe@mail.com'\n          name='email'\n          type='email'\n          showError={this.state.showError}\n          hasError={this.hasError}\n          onChange={this.handleChange}\n          value={this.state.email}\n        />\n\n        <Input\n          label='Password'\n          placeholder='Password'\n          name='password'\n          type='password'\n          showError={this.state.showError}\n          hasError={this.hasError}\n          onChange={this.handleChange}\n          value={this.state.password}\n        />\n\n        <Input\n          label='Confirm Password'\n          placeholder='Confirm Password'\n          name='confirmPassword'\n          type='password'\n          showError={this.state.showError}\n          hasError={this.hasError}\n          onChange={this.handleChange}\n          value={this.state.confirmPassword}\n        />\n\n        <Select\n          name='accessType'\n          options={SELECT_OPTIONS}\n          showError={this.state.showError}\n          hasError={this.hasError}\n          onChange={this.handleChange}\n          value={this.state.accessType}\n        />\n\n        <button type='submit'>Create New User</button>\n      </form>\n    );\n  }\n};\n\nexport default UsersForm;\n"]},"metadata":{},"sourceType":"module"}