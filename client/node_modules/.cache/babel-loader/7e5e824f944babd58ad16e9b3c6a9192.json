{"ast":null,"code":"import _defineProperty from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/NewUpdate.js\";\nimport React, { Component } from 'react';\nexport var newUpdate =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(newUpdate, _Component);\n\n  function newUpdate(props) {\n    var _this;\n\n    _classCallCheck(this, newUpdate);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(newUpdate).call(this, props));\n\n    _this.handleInput = function (e) {\n      //generic handleInput handles the change for any input field using the name and the value properties.\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      console.log('name', name);\n      console.log('value', value);\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFilter = function (e) {\n      e.preventDefault();\n\n      var filtered = _this.state.lists.filter(function (item) {\n        return item.text.includes(_this.state.filter);\n      });\n\n      _this.setState({\n        filteredLists: filtered,\n        filter: ''\n      });\n    };\n\n    _this.handleFilter = _this.handleFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      lists: [{\n        text: \"Municipal Rose Garden\",\n        key: \"ROSE\"\n      }],\n      filteredLists: [],\n      selectedLists: [],\n      filter: ''\n    };\n    return _this;\n  }\n\n  _createClass(newUpdate, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"filter\",\n        value: this.state.filter,\n        onChange: this.handleInput,\n        type: \"text\",\n        id: \"filter\",\n        placeholder: \"Search Parks..\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Search\")), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Select All\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.state.filteredLists.map(function (list, i) {\n        return React.createElement(\"li\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, list.text);\n      }))));\n    }\n  }]);\n\n  return newUpdate;\n}(Component);\nexport default newUpdate;","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/NewUpdate.js"],"names":["React","Component","newUpdate","props","handleInput","e","target","name","value","console","log","setState","handleFilter","preventDefault","filtered","state","lists","filter","item","text","includes","filteredLists","bind","key","selectedLists","map","list","i"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,WAAaC,SAAb;AAAA;AAAA;AAAA;;AACE,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,mFAAMA,KAAN;;AADgB,UAWpBC,WAXoB,GAWN,UAAAC,CAAC,EAAI;AAAE;AAAF,sBACKA,CAAC,CAACC,MADP;AAAA,UACVC,IADU,aACVA,IADU;AAAA,UACJC,KADI,aACJA,KADI;AAEjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBH,IAAnB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAApB;;AACA,YAAKG,QAAL,qBACKJ,IADL,EACYC,KADZ;AAGD,KAlBmB;;AAAA,UAoBpBI,YApBoB,GAoBL,UAAAP,CAAC,EAAI;AAClBA,MAAAA,CAAC,CAACQ,cAAF;;AACA,UAAMC,QAAQ,GAAG,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwB,UAAAC,IAAI,EAAG;AAC5C,eAAOA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,MAAKL,KAAL,CAAWE,MAA9B,CAAP;AACH,OAFgB,CAAjB;;AAGA,YAAKN,QAAL,CAAc;AACZU,QAAAA,aAAa,EAAEP,QADH;AAEZG,QAAAA,MAAM,EAAE;AAFI,OAAd;AAID,KA7BmB;;AAEhB,UAAKL,YAAL,GAAoB,MAAKA,YAAL,CAAkBU,IAAlB,uDAApB;AACA,UAAKP,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,CAAC;AAACG,QAAAA,IAAI,EAAE,uBAAP;AAAgCI,QAAAA,GAAG,EAAE;AAArC,OAAD,CADE;AAETF,MAAAA,aAAa,EAAE,EAFN;AAGTG,MAAAA,aAAa,EAAE,EAHN;AAITP,MAAAA,MAAM,EAAE;AAJC,KAAb;AAHgB;AASnB;;AAVD;AAAA;AAAA,6BA+BW;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKL,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWE,MAFtB;AAGI,QAAA,QAAQ,EAAE,KAAKb,WAHnB;AAII,QAAA,IAAI,EAAC,MAJT;AAIgB,QAAA,EAAE,EAAC,QAJnB;AAI4B,QAAA,WAAW,EAAC,gBAJxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKW,KAAL,CAAWM,aAAX,CAAyBI,GAAzB,CAA6B,UAACC,IAAD,EAAOC,CAAP;AAAA,eAAa;AAAI,UAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaD,IAAI,CAACP,IAAlB,CAAb;AAAA,OAA7B,CADH,CAVF,CADF,CADF;AAmBD;AAnDH;;AAAA;AAAA,EAA+BlB,SAA/B;AAsDA,eAAeC,SAAf","sourcesContent":["import React, { Component } from 'react'\n\nexport class newUpdate extends Component {\n  constructor(props){ \n    super(props); \n    this.handleFilter = this.handleFilter.bind(this)\n    this.state = {\n        lists: [{text: \"Municipal Rose Garden\", key: \"ROSE\"}],\n        filteredLists: [],\n        selectedLists: [],\n        filter: '',\n    }\n}\n\nhandleInput = e => { //generic handleInput handles the change for any input field using the name and the value properties.\n  const {name, value} = e.target;\n  console.log('name',name)\n  console.log('value',value)\n  this.setState({\n      [name]: value\n  });\n}\n\nhandleFilter = e => {\n  e.preventDefault();  \n  const filtered = this.state.lists.filter(item=> {\n      return item.text.includes(this.state.filter)\n  });\n  this.setState({\n    filteredLists: filtered,\n    filter: '',\n  });\n}\n  render() {\n    return (\n      <div>\n        <div>\n          <form onSubmit={this.handleFilter}>\n            <input \n                name='filter'\n                value={this.state.filter} \n                onChange={this.handleInput} \n                type=\"text\" id=\"filter\" placeholder=\"Search Parks..\"/>\n            <button type=\"submit\">Search</button>\n          </form>\n          <button>Select All</button>\n          <ul>\n            {this.state.filteredLists.map((list, i) => <li key={i}>{list.text}</li>)}\n          </ul>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default newUpdate;\n"]},"metadata":{},"sourceType":"module"}