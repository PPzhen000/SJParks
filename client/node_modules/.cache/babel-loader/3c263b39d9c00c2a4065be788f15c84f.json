{"ast":null,"code":"import _toConsumableArray from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/parks.js\";\nimport React, { Component } from 'react';\nimport Plist from './plist';\nimport Items from './items';\n\nvar parks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(parks, _Component);\n\n  function parks(props) {\n    var _this;\n\n    _classCallCheck(this, parks);\n\n    // and you can tell here that i added props to the component.\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(parks).call(this, props)); // It it didn't have any before.\n\n    _this.handleInput = function (e) {\n      //generic handleInput handles the change for any input field using the name and the value properties.\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      console.log('name', name);\n      console.log('value', value);\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.addItem = function (e) {\n      e.preventDefault();\n      var newPark = _this.state.newPark;\n      var newItem = {\n        key: Date.now(),\n        //needs to be another input from the user - a parkID\n        text: newPark\n      };\n\n      if (newItem.text !== '') {\n        // .text is a name for the park that came from user's input\n        var items = _toConsumableArray(_this.state.items).concat([newItem]); //concatinates new item object to an array of parks\n\n\n        items.sort(function (a, b) {\n          if (a.text < b.text) return -1;\n          if (a.text > b.text) return 1;\n          return 0;\n        });\n\n        _this.setState({\n          items: items,\n          newPark: ''\n        });\n      }\n    };\n\n    _this.deleteItem = function (key) {\n      var filteredItems = _this.state.items.filter(function (item) {\n        //filter() takes in an array and returns a new array with each item that passed through the true/false function.\n        return item.key !== key;\n      });\n\n      _this.setState({\n        items: filteredItems\n      });\n    };\n\n    _this.handleFilter = function (e) {\n      e.preventDefault();\n\n      var filtered = _this.state.items.filter(function (item) {\n        return item.text.includes(_this.state.filter);\n      }); //needs to filter through items according to the inputed value instead of 'hi'\n\n\n      _this.setState({\n        parkFilter: filtered,\n        filter: ''\n      });\n    };\n\n    _this.handleFilter = _this.handleFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      items: [],\n      parkFilter: [],\n      filter: '',\n      newPark: ''\n    };\n    return _this;\n  }\n\n  _createClass(parks, [{\n    key: \"render\",\n    value: function render() {\n      console.log('STATE', this.state);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"List\"), React.createElement(Plist, {\n        addItem: this.addItem,\n        handleInput: this.handleInput,\n        newPark: this.state.newPark,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(Items, {\n        entries: this.state.items,\n        deleteItem: this.deleteItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Filter\"), React.createElement(\"form\", {\n        onSubmit: this.handleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"filter\",\n        value: this.state.filter,\n        onChange: this.handleInput,\n        type: \"text\",\n        id: \"filter\",\n        placeholder: \"Search Parks..\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Search\")), React.createElement(Items, {\n        entries: this.state.parkFilter,\n        deleteItem: this.deleteItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return parks;\n}(Component); // PLEASE LOOK AT THE COMMENTS ON MY CODE AND IF YOU CAN EXPLAIN TO ME ABOUT THESE CONCEPTS\n// THANK YOU!!!\n\n\nexport { parks as default };","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/parks.js"],"names":["React","Component","Plist","Items","parks","props","handleInput","e","target","name","value","console","log","setState","addItem","preventDefault","newPark","state","newItem","key","Date","now","text","items","sort","a","b","deleteItem","filteredItems","filter","item","handleFilter","filtered","includes","parkFilter","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Plist from './plist';\nimport Items from './items';\n\nexport default class parks extends Component {\n  constructor(props) {\n    // and you can tell here that i added props to the component.\n    super(props); // It it didn't have any before.\n    this.handleFilter = this.handleFilter.bind(this);\n    this.state = {\n      items: [],\n      parkFilter: [],\n      filter: '',\n      newPark: ''\n    };\n  }\n\n  handleInput = e => {\n    //generic handleInput handles the change for any input field using the name and the value properties.\n    const { name, value } = e.target;\n    console.log('name', name);\n    console.log('value', value);\n    this.setState({\n      [name]: value\n    });\n  };\n\n  addItem = e => {\n    e.preventDefault();\n    const { newPark } = this.state;\n    const newItem = {\n      key: Date.now(), //needs to be another input from the user - a parkID\n      text: newPark\n    };\n    if (newItem.text !== '') {\n      // .text is a name for the park that came from user's input\n      let items = [...this.state.items, newItem]; //concatinates new item object to an array of parks\n      items.sort((a, b) => {\n        if (a.text < b.text) return -1;\n        if (a.text > b.text) return 1;\n        return 0;\n      });\n      this.setState({\n        items: items,\n        newPark: ''\n      });\n    }\n  };\n\n  deleteItem = key => {\n    const filteredItems = this.state.items.filter(item => {\n      //filter() takes in an array and returns a new array with each item that passed through the true/false function.\n      return item.key !== key;\n    });\n    this.setState({\n      items: filteredItems\n    });\n  };\n\n  handleFilter = e => {\n    e.preventDefault();\n    const filtered = this.state.items.filter(item => {\n      return item.text.includes(this.state.filter);\n    }); //needs to filter through items according to the inputed value instead of 'hi'\n    this.setState({\n      parkFilter: filtered,\n      filter: ''\n    });\n  };\n\n  render() {\n    console.log('STATE', this.state);\n    return (\n      <div>\n        <h2>List</h2>\n        <Plist\n          addItem={this.addItem}\n          handleInput={this.handleInput}\n          newPark={this.state.newPark}\n        />\n        <Items entries={this.state.items} deleteItem={this.deleteItem} />\n\n        <h2>Filter</h2>\n        <form onSubmit={this.handleFilter}>\n          <input\n            name='filter'\n            value={this.state.filter}\n            onChange={this.handleInput}\n            type='text'\n            id='filter'\n            placeholder='Search Parks..'\n          />\n          <button type='submit'>Search</button>\n        </form>\n        <Items entries={this.state.parkFilter} deleteItem={this.deleteItem} />\n      </div>\n    );\n  }\n}\n\n// PLEASE LOOK AT THE COMMENTS ON MY CODE AND IF YOU CAN EXPLAIN TO ME ABOUT THESE CONCEPTS\n// THANK YOU!!!\n"]},"metadata":{},"sourceType":"module"}