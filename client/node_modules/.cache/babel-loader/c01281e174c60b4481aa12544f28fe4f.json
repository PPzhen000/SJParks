{"ast":null,"code":"import _defineProperty from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/users.js\";\nimport React from 'react';\nvar emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/); // const inputIsValid = (name, value) => {\n//   let isValid;\n//   switch (name) {\n//     case 'fullName':\n//       isValid = value.length > 3;\n//       break;\n//     case 'userId':\n//       isValid = value.length > 3;\n//       break;\n//     case 'email':\n//       isValid = emailRegex.test(value);\n//       break;\n//     case 'password':\n//       isValid = value.length > 6;\n//       break;\n//     case 'passwordCheck':\n//       isValid = value.length > 6;\n//       break;\n//     case 'accessType':\n//       isValid = value === 'updates' || value === 'premium';\n//       break;\n//   }\n//   return isValid;\n// };\n\nvar inputIsValid = function inputIsValid(props) {\n  console.log('props', props);\n  var isValid; // switch (name) {\n  //   case 'fullName':\n  //     isValid = value.length > 3;\n  //     break;\n  //   case 'userId':\n  //     isValid = value.length > 3;\n  //     break;\n  //   case 'email':\n  //     isValid = emailRegex.test(value);\n  //     break;\n  //   case 'password':\n  //     isValid = value.length > 6;\n  //     break;\n  //   case 'passwordCheck':\n  //     isValid = value.length > 6;\n  //     break;\n  //   case 'accessType':\n  //     isValid = value === 'updates' || value === 'premium';\n  //     break;\n  // }\n  // return isValid;\n};\n\nvar Users =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(userInput, _React$Component);\n\n  function userInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, userInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(userInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fullName: '',\n      userId: '',\n      email: '',\n      password: '',\n      passwordCheck: '',\n      accessType: 'updates',\n      formError: {\n        fullName: false,\n        userId: false,\n        email: false,\n        password: false,\n        passwordCheck: false,\n        accessType: false\n      }\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      inputIsValid(_this.state);\n    };\n\n    return _this;\n  }\n\n  _createClass(userInput, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"USERS\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"fullName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Full Name:\"), React.createElement(\"input\", {\n        id: \"fullName\",\n        placeholder: \"Full Name\",\n        name: \"fullName\",\n        type: \"text\",\n        value: this.state.fullName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"userId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"User ID: \"), React.createElement(\"input\", {\n        id: \"userId\",\n        placeholder: \"User ID\",\n        name: \"userId\",\n        type: \"text\",\n        value: this.state.userId,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(\"input\", {\n        id: \"email\",\n        placeholder: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Password:\"), React.createElement(\"input\", {\n        id: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"passwordCheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Confirm Password:\"), React.createElement(\"input\", {\n        id: \"passwordCheck\",\n        placeholder: \"Confirm Password\",\n        name: \"passwordCheck\",\n        type: \"password\",\n        value: this.state.passwordCheck,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"accessType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Access Type:\"), React.createElement(\"select\", {\n        id: \"accessType\",\n        name: \"accessType\",\n        value: this.state.accessType,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"updates\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Updates Only\"), React.createElement(\"option\", {\n        value: \"premium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Premiun Access\")), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Create New User\")));\n    }\n  }]);\n\n  return userInput;\n}(React.Component);\n\nexport default Users;","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/users.js"],"names":["React","emailRegex","RegExp","inputIsValid","props","console","log","isValid","Users","state","fullName","userId","email","password","passwordCheck","accessType","formError","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\n// const inputIsValid = (name, value) => {\n//   let isValid;\n\n//   switch (name) {\n//     case 'fullName':\n//       isValid = value.length > 3;\n//       break;\n//     case 'userId':\n//       isValid = value.length > 3;\n//       break;\n//     case 'email':\n//       isValid = emailRegex.test(value);\n//       break;\n//     case 'password':\n//       isValid = value.length > 6;\n//       break;\n//     case 'passwordCheck':\n//       isValid = value.length > 6;\n//       break;\n//     case 'accessType':\n//       isValid = value === 'updates' || value === 'premium';\n//       break;\n//   }\n\n//   return isValid;\n// };\nconst inputIsValid = props => {\n  console.log('props', props);\n  let isValid;\n\n  // switch (name) {\n  //   case 'fullName':\n  //     isValid = value.length > 3;\n  //     break;\n  //   case 'userId':\n  //     isValid = value.length > 3;\n  //     break;\n  //   case 'email':\n  //     isValid = emailRegex.test(value);\n  //     break;\n  //   case 'password':\n  //     isValid = value.length > 6;\n  //     break;\n  //   case 'passwordCheck':\n  //     isValid = value.length > 6;\n  //     break;\n  //   case 'accessType':\n  //     isValid = value === 'updates' || value === 'premium';\n  //     break;\n  // }\n\n  // return isValid;\n};\n\nconst Users = class userInput extends React.Component {\n  state = {\n    fullName: '',\n    userId: '',\n    email: '',\n    password: '',\n    passwordCheck: '',\n    accessType: 'updates',\n    formError: {\n      fullName: false,\n      userId: false,\n      email: false,\n      password: false,\n      passwordCheck: false,\n      accessType: false\n    }\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    inputIsValid(this.state);\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>USERS</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor='fullName'>Full Name:</label>\n          <input\n            id='fullName'\n            placeholder='Full Name'\n            name='fullName'\n            type='text'\n            value={this.state.fullName}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='userId'>User ID: </label>\n          <input\n            id='userId'\n            placeholder='User ID'\n            name='userId'\n            type='text'\n            value={this.state.userId}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='email'>Email:</label>\n          <input\n            id='email'\n            placeholder='Email'\n            name='email'\n            type='email'\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='password'>Password:</label>\n          <input\n            id='password'\n            placeholder='Password'\n            name='password'\n            type='password'\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='passwordCheck'>Confirm Password:</label>\n          <input\n            id='passwordCheck'\n            placeholder='Confirm Password'\n            name='passwordCheck'\n            type='password'\n            value={this.state.passwordCheck}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor='accessType'>Access Type:</label>\n          <select\n            id='accessType'\n            name='accessType'\n            value={this.state.accessType}\n            onChange={this.handleChange}>\n            <option value='updates'>Updates Only</option>\n            <option value='premium'>Premiun Access</option>\n          </select>\n\n          <button type='submit'>Create New User</button>\n        </form>\n      </div>\n    );\n  }\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}