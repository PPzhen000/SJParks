{"ast":null,"code":"import _classCallCheck from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/ProfilePage/UserImage.js\";\nimport React from 'react';\n\nvar UserImage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserImage, _React$Component);\n\n  function UserImage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserImage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserImage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      uploading: false,\n      images: []\n    };\n\n    _this.onChange = function (e) {\n      var files = Array.from(e.target.files);\n\n      _this.setState({\n        uploading: true\n      });\n\n      var formData = new FormData();\n      files.forEach(function (file, i) {\n        formData.append(i, file);\n      });\n      fetch(\"admin/image-upload\", {\n        method: 'POST',\n        body: formData\n      }).then(function (res) {\n        return res.json();\n      }).then(function (images) {\n        _this.setState({\n          uploading: false,\n          images: images\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UserImage, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      console.log('handleSubmit');\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          uploading = _this$state.uploading,\n          images = _this$state.images;\n\n      var content = function content() {\n        switch (true) {\n          case uploading:\n            return '<Spinner />';\n\n          case images.length > 0:\n            return '<Images images={images} removeImage={this.removeImage} />';\n\n          default:\n            return React.createElement(\"button\", {\n              onChange: _this2.onChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47\n              },\n              __self: this\n            }, \"Button\");\n        }\n      };\n\n      console.log();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, content(content())) // <form onSubmit={this.handleSubmit}>\n      //   {content()}\n      //   <button>\n      //     <img src='' alt='avatar' />\n      //     <input\n      //       id='userImage'\n      //       type='file'\n      //       onChange={this.onChange}\n      //       ref={this.fileInput}\n      //       hidden\n      //     />\n      //   </button>\n      // </form>\n      ;\n    }\n  }]);\n\n  return UserImage;\n}(React.Component);\n\nexport default UserImage;","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/ProfilePage/UserImage.js"],"names":["React","UserImage","state","uploading","images","onChange","e","files","Array","from","target","setState","formData","FormData","forEach","file","i","append","fetch","method","body","then","res","json","event","console","log","preventDefault","content","length","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,MAAM,EAAE;AAFF,K;;UAURC,Q,GAAW,UAAAC,CAAC,EAAI;AACd,UAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWH,CAAC,CAACI,MAAF,CAASH,KAApB,CAAd;;AACA,YAAKI,QAAL,CAAc;AAAER,QAAAA,SAAS,EAAE;AAAb,OAAd;;AAEA,UAAMS,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAN,MAAAA,KAAK,CAACO,OAAN,CAAc,UAACC,IAAD,EAAOC,CAAP,EAAa;AACzBJ,QAAAA,QAAQ,CAACK,MAAT,CAAgBD,CAAhB,EAAmBD,IAAnB;AACD,OAFD;AAIAG,MAAAA,KAAK,uBAAuB;AAC1BC,QAAAA,MAAM,EAAE,MADkB;AAE1BC,QAAAA,IAAI,EAAER;AAFoB,OAAvB,CAAL,CAIGS,IAJH,CAIQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAJX,EAKGF,IALH,CAKQ,UAAAjB,MAAM,EAAI;AACd,cAAKO,QAAL,CAAc;AACZR,UAAAA,SAAS,EAAE,KADC;AAEZC,UAAAA,MAAM,EAANA;AAFY,SAAd;AAID,OAVH;AAWD,K;;;;;;;iCA1BYoB,K,EAAO;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAF,MAAAA,KAAK,CAACG,cAAN;AACD;;;6BAyBQ;AAAA;;AAAA,wBACuB,KAAKzB,KAD5B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,MADZ,eACYA,MADZ;;AAGP,UAAMwB,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,gBAAQ,IAAR;AACE,eAAKzB,SAAL;AACE,mBAAO,aAAP;;AACF,eAAKC,MAAM,CAACyB,MAAP,GAAgB,CAArB;AACE,mBAAO,2DAAP;;AACF;AACE,mBAAO;AAAQ,cAAA,QAAQ,EAAE,MAAI,CAACxB,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AANJ;AAQD,OATD;;AAUAoB,MAAAA,OAAO,CAACC,GAAR;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAME,OAAO,CAACA,OAAO,EAAR,CAAb,CADF,CAGE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfF;AAiBD;;;;EAjEqB5B,KAAK,CAAC8B,S;;AAoE9B,eAAe7B,SAAf","sourcesContent":["import React from 'react';\n\nclass UserImage extends React.Component {\n  state = {\n    uploading: false,\n    images: []\n  };\n\n  handleSubmit(event) {\n    console.log('handleSubmit');\n    event.preventDefault();\n  }\n\n  onChange = e => {\n    const files = Array.from(e.target.files);\n    this.setState({ uploading: true });\n\n    const formData = new FormData();\n\n    files.forEach((file, i) => {\n      formData.append(i, file);\n    });\n\n    fetch(`admin/image-upload`, {\n      method: 'POST',\n      body: formData\n    })\n      .then(res => res.json())\n      .then(images => {\n        this.setState({\n          uploading: false,\n          images\n        });\n      });\n  };\n\n  render() {\n    const { uploading, images } = this.state;\n\n    const content = () => {\n      switch (true) {\n        case uploading:\n          return '<Spinner />';\n        case images.length > 0:\n          return '<Images images={images} removeImage={this.removeImage} />';\n        default:\n          return <button onChange={this.onChange}>Button</button>;\n      }\n    };\n    console.log();\n    return (\n      <div>{content(content())}</div>\n\n      // <form onSubmit={this.handleSubmit}>\n      //   {content()}\n      //   <button>\n      //     <img src='' alt='avatar' />\n      //     <input\n      //       id='userImage'\n      //       type='file'\n      //       onChange={this.onChange}\n      //       ref={this.fileInput}\n      //       hidden\n      //     />\n      //   </button>\n      // </form>\n    );\n  }\n}\n\nexport default UserImage;\n"]},"metadata":{},"sourceType":"module"}