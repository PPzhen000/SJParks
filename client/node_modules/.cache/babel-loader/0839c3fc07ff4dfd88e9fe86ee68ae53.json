{"ast":null,"code":"import _classCallCheck from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/GitHub/SJParks/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/GitHub/SJParks/client/src/components/ProfilePage/UserImage.js\";\nimport React from 'react';\nvar IMAGE_TYPES = ['image/png', 'image/gif', 'image/jpeg'];\nvar ERROR = 'The files must be less than 2MB and .png, .gif, .jpeg';\n\nvar UserImage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserImage, _React$Component);\n\n  function UserImage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserImage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserImage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      image: null,\n      showError: false\n    };\n\n    _this.onChange = function (e) {\n      var file = e.target.files[0];\n      var isTypeValid = IMAGE_TYPES.includes(file.type);\n      var isSizeValid = file.size / 1024 / 1024 <= 2; // Less than 2MB\n      // Check if the form has error\n\n      if (!isTypeValid, !isSizeValid) _this.setState({\n        showError: true\n      });\n\n      if (isTypeValid, isSizeValid) {\n        fetch(\"admin/image-upload\", {\n          method: 'POST',\n          body: file\n        }).then(function (res) {\n          return res.json();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n        console.log('files', file);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(UserImage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.fileInput.click();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"#\",\n        alt: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.onChange,\n        style: {\n          display: 'none'\n        },\n        ref: function ref(fileInput) {\n          return _this2.fileInput = fileInput;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), this.state.showError ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, ERROR) : null);\n    }\n  }]);\n\n  return UserImage;\n}(React.Component);\n\nexport default UserImage;","map":{"version":3,"sources":["/Users/david/GitHub/SJParks/client/src/components/ProfilePage/UserImage.js"],"names":["React","IMAGE_TYPES","ERROR","UserImage","state","image","showError","onChange","e","file","target","files","isTypeValid","includes","type","isSizeValid","size","setState","fetch","method","body","then","res","json","catch","err","console","log","fileInput","click","display","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,WAAW,GAAG,CAAC,WAAD,EAAc,WAAd,EAA2B,YAA3B,CAApB;AACA,IAAMC,KAAK,GAAG,uDAAd;;IAEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,SAAS,EAAE;AAFL,K;;UAKRC,Q,GAAW,UAAAC,CAAC,EAAI;AACd,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,UAAMC,WAAW,GAAGX,WAAW,CAACY,QAAZ,CAAqBJ,IAAI,CAACK,IAA1B,CAApB;AACA,UAAMC,WAAW,GAAGN,IAAI,CAACO,IAAL,GAAY,IAAZ,GAAmB,IAAnB,IAA2B,CAA/C,CAHc,CAGoC;AAElD;;AACA,UAAK,CAACJ,WAAD,EAAc,CAACG,WAApB,EAAkC,MAAKE,QAAL,CAAc;AAAEX,QAAAA,SAAS,EAAE;AAAb,OAAd;;AAElC,UAAKM,WAAW,EAAEG,WAAlB,EAAgC;AAC9BG,QAAAA,KAAK,uBAAuB;AAC1BC,UAAAA,MAAM,EAAE,MADkB;AAE1BC,UAAAA,IAAI,EAAEX;AAFoB,SAAvB,CAAL,CAIGY,IAJH,CAIQ,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,SAJX,EAKGC,KALH,CAKS,UAAAC,GAAG;AAAA,iBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,SALZ;AAOAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBlB,IAArB;AACD;AACF,K;;;;;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACmB,SAAL,CAAeC,KAAf,EAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAC,GAAT;AAAa,QAAA,GAAG,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAE,KAAKtB,QAFjB;AAGE,QAAA,KAAK,EAAE;AAAEuB,UAAAA,OAAO,EAAE;AAAX,SAHT;AAIE,QAAA,GAAG,EAAE,aAAAF,SAAS;AAAA,iBAAK,MAAI,CAACA,SAAL,GAAiBA,SAAtB;AAAA,SAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAUG,KAAKxB,KAAL,CAAWE,SAAX,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOJ,KAAP,CAAvB,GAA8C,IAVjD,CADF;AAcD;;;;EAzCqBF,KAAK,CAAC+B,S;;AA4C9B,eAAe5B,SAAf","sourcesContent":["import React from 'react';\n\nconst IMAGE_TYPES = ['image/png', 'image/gif', 'image/jpeg'];\nconst ERROR = 'The files must be less than 2MB and .png, .gif, .jpeg';\n\nclass UserImage extends React.Component {\n  state = {\n    image: null,\n    showError: false\n  };\n\n  onChange = e => {\n    const file = e.target.files[0];\n    const isTypeValid = IMAGE_TYPES.includes(file.type);\n    const isSizeValid = file.size / 1024 / 1024 <= 2; // Less than 2MB\n\n    // Check if the form has error\n    if ((!isTypeValid, !isSizeValid)) this.setState({ showError: true });\n\n    if ((isTypeValid, isSizeValid)) {\n      fetch(`admin/image-upload`, {\n        method: 'POST',\n        body: file\n      })\n        .then(res => res.json())\n        .catch(err => console.log(err));\n\n      console.log('files', file);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={() => this.fileInput.click()}>\n          <img src='#' alt='avatar' />\n        </button>\n        <input\n          type='file'\n          onChange={this.onChange}\n          style={{ display: 'none' }}\n          ref={fileInput => (this.fileInput = fileInput)}\n        />\n        {this.state.showError ? <span>{ERROR}</span> : null}\n      </div>\n    );\n  }\n}\n\nexport default UserImage;\n"]},"metadata":{},"sourceType":"module"}